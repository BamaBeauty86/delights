{
  "api/delights/Delights.Api.html": {
    "href": "api/delights/Delights.Api.html",
    "title": "Namespace Delights.Api | Delights",
    "keywords": "Namespace Delights.Api Classes Program Startup"
  },
  "api/delights/Delights.Api.Program.html": {
    "href": "api/delights/Delights.Api.Program.html",
    "title": "Class Program | Delights",
    "keywords": "Class Program Inheritance System.Object Program Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Delights.Api Assembly : Delights.Api.dll Syntax public class Program Methods CreateHostBuilder(String[]) Declaration public static IHostBuilder CreateHostBuilder(string[] args) Parameters Type Name Description System.String [] args Returns Type Description Microsoft.Extensions.Hosting.IHostBuilder Main(String[]) Declaration public static Task Main(string[] args) Parameters Type Name Description System.String [] args Returns Type Description System.Threading.Tasks.Task"
  },
  "api/delights/Delights.Api.Startup.html": {
    "href": "api/delights/Delights.Api.Startup.html",
    "title": "Class Startup | Delights",
    "keywords": "Class Startup Inheritance System.Object Startup Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Delights.Api Assembly : Delights.Api.dll Syntax public class Startup Constructors Startup(IConfiguration) Declaration public Startup(IConfiguration configuration) Parameters Type Name Description Microsoft.Extensions.Configuration.IConfiguration configuration Properties Configuration Declaration public IConfiguration Configuration { get; } Property Value Type Description Microsoft.Extensions.Configuration.IConfiguration Methods Configure(IApplicationBuilder, IWebHostEnvironment) Declaration public void Configure(IApplicationBuilder app, IWebHostEnvironment env) Parameters Type Name Description Microsoft.AspNetCore.Builder.IApplicationBuilder app Microsoft.AspNetCore.Hosting.IWebHostEnvironment env ConfigureServices(IServiceCollection) Declaration public void ConfigureServices(IServiceCollection services) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services"
  },
  "api/delights/Delights.Client.html": {
    "href": "api/delights/Delights.Client.html",
    "title": "Namespace Delights.Client | Delights",
    "keywords": "Namespace Delights.Client Classes Program Startup"
  },
  "api/delights/Delights.Client.Program.html": {
    "href": "api/delights/Delights.Client.Program.html",
    "title": "Class Program | Delights",
    "keywords": "Class Program Inheritance System.Object Program Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Delights.Client Assembly : Delights.Client.dll Syntax public class Program Methods CreateHostBuilder(String[]) Declaration public static IHostBuilder CreateHostBuilder(string[] args) Parameters Type Name Description System.String [] args Returns Type Description Microsoft.Extensions.Hosting.IHostBuilder Main(String[]) Declaration public static Task Main(string[] args) Parameters Type Name Description System.String [] args Returns Type Description System.Threading.Tasks.Task"
  },
  "api/delights/Delights.Client.Shared.html": {
    "href": "api/delights/Delights.Client.Shared.html",
    "title": "Namespace Delights.Client.Shared | Delights",
    "keywords": "Namespace Delights.Client.Shared Classes ModuleSetup ServerConfiguration ServiceExtensions"
  },
  "api/delights/Delights.Client.Shared.ModuleSetup.html": {
    "href": "api/delights/Delights.Client.Shared.ModuleSetup.html",
    "title": "Class ModuleSetup | Delights",
    "keywords": "Class ModuleSetup Inheritance System.Object ModuleSetup Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Delights.Client.Shared Assembly : Delights.Client.Shared.dll Syntax public static class ModuleSetup Methods CreateDefaultBuilder() Declaration public static IModuleHostBuilder CreateDefaultBuilder() Returns Type Description IModuleHostBuilder"
  },
  "api/delights/Delights.Client.Shared.ServerConfiguration.html": {
    "href": "api/delights/Delights.Client.Shared.ServerConfiguration.html",
    "title": "Class ServerConfiguration | Delights",
    "keywords": "Class ServerConfiguration Inheritance System.Object ServerConfiguration Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Delights.Client.Shared Assembly : Delights.Client.Shared.dll Syntax public class ServerConfiguration Properties GraphQLEndpoint Declaration public string GraphQLEndpoint { get; set; } Property Value Type Description System.String"
  },
  "api/delights/Delights.Client.Shared.ServiceExtensions.html": {
    "href": "api/delights/Delights.Client.Shared.ServiceExtensions.html",
    "title": "Class ServiceExtensions | Delights",
    "keywords": "Class ServiceExtensions Inheritance System.Object ServiceExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Delights.Client.Shared Assembly : Delights.Client.Shared.dll Syntax public static class ServiceExtensions Methods AddServerConfiguration(IServiceCollection) Declaration public static IServiceCollection AddServerConfiguration(this IServiceCollection services) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceCollection"
  },
  "api/delights/Delights.Client.Startup.html": {
    "href": "api/delights/Delights.Client.Startup.html",
    "title": "Class Startup | Delights",
    "keywords": "Class Startup Inheritance System.Object Startup Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Delights.Client Assembly : Delights.Client.dll Syntax public class Startup Constructors Startup(IConfiguration) Declaration public Startup(IConfiguration configuration) Parameters Type Name Description Microsoft.Extensions.Configuration.IConfiguration configuration Properties Configuration Declaration public IConfiguration Configuration { get; } Property Value Type Description Microsoft.Extensions.Configuration.IConfiguration Methods Configure(IApplicationBuilder, IWebHostEnvironment) Declaration public void Configure(IApplicationBuilder app, IWebHostEnvironment env) Parameters Type Name Description Microsoft.AspNetCore.Builder.IApplicationBuilder app Microsoft.AspNetCore.Hosting.IWebHostEnvironment env ConfigureServices(IServiceCollection) Declaration public void ConfigureServices(IServiceCollection services) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services"
  },
  "api/delights/Delights.Client.WebAssembly.Host.html": {
    "href": "api/delights/Delights.Client.WebAssembly.Host.html",
    "title": "Namespace Delights.Client.WebAssembly.Host | Delights",
    "keywords": "Namespace Delights.Client.WebAssembly.Host Classes Program Startup"
  },
  "api/delights/Delights.Client.WebAssembly.Host.Program.html": {
    "href": "api/delights/Delights.Client.WebAssembly.Host.Program.html",
    "title": "Class Program | Delights",
    "keywords": "Class Program Inheritance System.Object Program Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Delights.Client.WebAssembly.Host Assembly : Delights.Client.WebAssembly.Host.dll Syntax public class Program Methods CreateHostBuilder(String[]) Declaration public static IHostBuilder CreateHostBuilder(string[] args) Parameters Type Name Description System.String [] args Returns Type Description Microsoft.Extensions.Hosting.IHostBuilder Main(String[]) Declaration public static Task Main(string[] args) Parameters Type Name Description System.String [] args Returns Type Description System.Threading.Tasks.Task"
  },
  "api/delights/Delights.Client.WebAssembly.Host.Startup.html": {
    "href": "api/delights/Delights.Client.WebAssembly.Host.Startup.html",
    "title": "Class Startup | Delights",
    "keywords": "Class Startup Inheritance System.Object Startup Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Delights.Client.WebAssembly.Host Assembly : Delights.Client.WebAssembly.Host.dll Syntax public class Startup Constructors Startup(IConfiguration) Declaration public Startup(IConfiguration configuration) Parameters Type Name Description Microsoft.Extensions.Configuration.IConfiguration configuration Properties Configuration Declaration public IConfiguration Configuration { get; } Property Value Type Description Microsoft.Extensions.Configuration.IConfiguration Methods Configure(IApplicationBuilder, IWebHostEnvironment) Declaration public void Configure(IApplicationBuilder app, IWebHostEnvironment env) Parameters Type Name Description Microsoft.AspNetCore.Builder.IApplicationBuilder app Microsoft.AspNetCore.Hosting.IWebHostEnvironment env ConfigureServices(IServiceCollection) Declaration public void ConfigureServices(IServiceCollection services) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services"
  },
  "api/delights/Delights.Client.WebAssembly.html": {
    "href": "api/delights/Delights.Client.WebAssembly.html",
    "title": "Namespace Delights.Client.WebAssembly | Delights",
    "keywords": "Namespace Delights.Client.WebAssembly Classes Program"
  },
  "api/delights/Delights.Client.WebAssembly.Program.html": {
    "href": "api/delights/Delights.Client.WebAssembly.Program.html",
    "title": "Class Program | Delights",
    "keywords": "Class Program Inheritance System.Object Program Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Delights.Client.WebAssembly Assembly : Delights.Client.WebAssembly.dll Syntax public class Program Methods Main(String[]) Declaration public static Task Main(string[] args) Parameters Type Name Description System.String [] args Returns Type Description System.Threading.Tasks.Task"
  },
  "api/delights/Delights.Modules.Hello.GraphQL.GetMessages.html": {
    "href": "api/delights/Delights.Modules.Hello.GraphQL.GetMessages.html",
    "title": "Class GetMessages | Delights",
    "keywords": "Class GetMessages Inheritance System.Object GetMessages Implements IGetMessages Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Delights.Modules.Hello.GraphQL Assembly : Delights.Modules.Hello.dll Syntax public class GetMessages : IGetMessages Constructors GetMessages(IMessageConnection) Declaration public GetMessages(IMessageConnection messages) Parameters Type Name Description IMessageConnection messages Properties Messages Declaration public IMessageConnection Messages { get; } Property Value Type Description IMessageConnection Implements IGetMessages"
  },
  "api/delights/Delights.Modules.Hello.GraphQL.GetMessagesOperation.html": {
    "href": "api/delights/Delights.Modules.Hello.GraphQL.GetMessagesOperation.html",
    "title": "Class GetMessagesOperation | Delights",
    "keywords": "Class GetMessagesOperation Inheritance System.Object GetMessagesOperation Implements StrawberryShake.IOperation < IGetMessages > StrawberryShake.IOperation Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Delights.Modules.Hello.GraphQL Assembly : Delights.Modules.Hello.dll Syntax public class GetMessagesOperation : IOperation<IGetMessages>, IOperation Properties Document Declaration public IDocument Document { get; } Property Value Type Description StrawberryShake.IDocument Kind Declaration public OperationKind Kind { get; } Property Value Type Description StrawberryShake.OperationKind Name Declaration public string Name { get; } Property Value Type Description System.String ResultType Declaration public Type ResultType { get; } Property Value Type Description System.Type Methods GetVariableValues() Declaration public IReadOnlyList<VariableValue> GetVariableValues() Returns Type Description System.Collections.Generic.IReadOnlyList < StrawberryShake.VariableValue > Implements StrawberryShake.IOperation<T> StrawberryShake.IOperation"
  },
  "api/delights/Delights.Modules.Hello.GraphQL.GetMessagesResultParser.html": {
    "href": "api/delights/Delights.Modules.Hello.GraphQL.GetMessagesResultParser.html",
    "title": "Class GetMessagesResultParser | Delights",
    "keywords": "Class GetMessagesResultParser Inheritance System.Object StrawberryShake.Http.JsonResultParserBase < IGetMessages > GetMessagesResultParser Implements StrawberryShake.IResultParser Inherited Members StrawberryShake.Http.JsonResultParserBase<Delights.Modules.Hello.GraphQL.IGetMessages>.Parse(System.ReadOnlySpan<System.Byte>, StrawberryShake.IOperationResultBuilder) StrawberryShake.Http.JsonResultParserBase<Delights.Modules.Hello.GraphQL.IGetMessages>.ParseAsync(System.IO.Stream, StrawberryShake.IOperationResultBuilder, System.Threading.CancellationToken) StrawberryShake.Http.JsonResultParserBase<Delights.Modules.Hello.GraphQL.IGetMessages>.TypeName StrawberryShake.Http.JsonResultParserBase<Delights.Modules.Hello.GraphQL.IGetMessages>.ResultType System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Delights.Modules.Hello.GraphQL Assembly : Delights.Modules.Hello.dll Syntax public class GetMessagesResultParser : JsonResultParserBase<IGetMessages>, IResultParser Constructors GetMessagesResultParser(IValueSerializerCollection) Declaration public GetMessagesResultParser(IValueSerializerCollection serializerResolver) Parameters Type Name Description StrawberryShake.IValueSerializerCollection serializerResolver Methods ParserData(JsonElement) Declaration protected override IGetMessages ParserData(JsonElement data) Parameters Type Name Description System.Text.Json.JsonElement data Returns Type Description IGetMessages Overrides StrawberryShake.Http.JsonResultParserBase<Delights.Modules.Hello.GraphQL.IGetMessages>.ParserData(System.Text.Json.JsonElement) Implements StrawberryShake.IResultParser"
  },
  "api/delights/Delights.Modules.Hello.GraphQL.HelloGraphQLClient.html": {
    "href": "api/delights/Delights.Modules.Hello.GraphQL.HelloGraphQLClient.html",
    "title": "Class HelloGraphQLClient | Delights",
    "keywords": "Class HelloGraphQLClient Inheritance System.Object HelloGraphQLClient Implements IHelloGraphQLClient Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Delights.Modules.Hello.GraphQL Assembly : Delights.Modules.Hello.dll Syntax public class HelloGraphQLClient : IHelloGraphQLClient Constructors HelloGraphQLClient(IOperationExecutorPool) Declaration public HelloGraphQLClient(IOperationExecutorPool executorPool) Parameters Type Name Description StrawberryShake.IOperationExecutorPool executorPool Methods GetMessagesAsync(GetMessagesOperation, CancellationToken) Declaration public Task<IOperationResult<IGetMessages>> GetMessagesAsync(GetMessagesOperation operation, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description GetMessagesOperation operation System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < StrawberryShake.IOperationResult < IGetMessages >> GetMessagesAsync(CancellationToken) Declaration public Task<IOperationResult<IGetMessages>> GetMessagesAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < StrawberryShake.IOperationResult < IGetMessages >> Implements IHelloGraphQLClient"
  },
  "api/delights/Delights.Modules.Hello.GraphQL.HelloGraphQLClientServiceCollectionExtensions.html": {
    "href": "api/delights/Delights.Modules.Hello.GraphQL.HelloGraphQLClientServiceCollectionExtensions.html",
    "title": "Class HelloGraphQLClientServiceCollectionExtensions | Delights",
    "keywords": "Class HelloGraphQLClientServiceCollectionExtensions Inheritance System.Object HelloGraphQLClientServiceCollectionExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Delights.Modules.Hello.GraphQL Assembly : Delights.Modules.Hello.dll Syntax public static class HelloGraphQLClientServiceCollectionExtensions Methods AddHelloGraphQLClient(IServiceCollection) Declaration public static IOperationClientBuilder AddHelloGraphQLClient(this IServiceCollection serviceCollection) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection Returns Type Description StrawberryShake.Configuration.IOperationClientBuilder"
  },
  "api/delights/Delights.Modules.Hello.GraphQL.html": {
    "href": "api/delights/Delights.Modules.Hello.GraphQL.html",
    "title": "Namespace Delights.Modules.Hello.GraphQL | Delights",
    "keywords": "Namespace Delights.Modules.Hello.GraphQL Classes GetMessages GetMessagesOperation GetMessagesResultParser HelloGraphQLClient HelloGraphQLClientServiceCollectionExtensions Message MessageConnection Module Interfaces IGetMessages IHelloGraphQLClient IMessage IMessageConnection"
  },
  "api/delights/Delights.Modules.Hello.GraphQL.IGetMessages.html": {
    "href": "api/delights/Delights.Modules.Hello.GraphQL.IGetMessages.html",
    "title": "Interface IGetMessages | Delights",
    "keywords": "Interface IGetMessages Namespace : Delights.Modules.Hello.GraphQL Assembly : Delights.Modules.Hello.dll Syntax public interface IGetMessages Properties Messages Declaration IMessageConnection Messages { get; } Property Value Type Description IMessageConnection"
  },
  "api/delights/Delights.Modules.Hello.GraphQL.IHelloGraphQLClient.html": {
    "href": "api/delights/Delights.Modules.Hello.GraphQL.IHelloGraphQLClient.html",
    "title": "Interface IHelloGraphQLClient | Delights",
    "keywords": "Interface IHelloGraphQLClient Namespace : Delights.Modules.Hello.GraphQL Assembly : Delights.Modules.Hello.dll Syntax public interface IHelloGraphQLClient Methods GetMessagesAsync(GetMessagesOperation, CancellationToken) Declaration Task<IOperationResult<IGetMessages>> GetMessagesAsync(GetMessagesOperation operation, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description GetMessagesOperation operation System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < StrawberryShake.IOperationResult < IGetMessages >> GetMessagesAsync(CancellationToken) Declaration Task<IOperationResult<IGetMessages>> GetMessagesAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < StrawberryShake.IOperationResult < IGetMessages >>"
  },
  "api/delights/Delights.Modules.Hello.GraphQL.IMessage.html": {
    "href": "api/delights/Delights.Modules.Hello.GraphQL.IMessage.html",
    "title": "Interface IMessage | Delights",
    "keywords": "Interface IMessage Namespace : Delights.Modules.Hello.GraphQL Assembly : Delights.Modules.Hello.dll Syntax public interface IMessage Properties Content Declaration string Content { get; } Property Value Type Description System.String"
  },
  "api/delights/Delights.Modules.Hello.GraphQL.IMessageConnection.html": {
    "href": "api/delights/Delights.Modules.Hello.GraphQL.IMessageConnection.html",
    "title": "Interface IMessageConnection | Delights",
    "keywords": "Interface IMessageConnection Namespace : Delights.Modules.Hello.GraphQL Assembly : Delights.Modules.Hello.dll Syntax public interface IMessageConnection Properties Nodes Declaration IReadOnlyList<IMessage> Nodes { get; } Property Value Type Description System.Collections.Generic.IReadOnlyList < IMessage >"
  },
  "api/delights/Delights.Modules.Hello.GraphQL.Message.html": {
    "href": "api/delights/Delights.Modules.Hello.GraphQL.Message.html",
    "title": "Class Message | Delights",
    "keywords": "Class Message Inheritance System.Object Message Implements IMessage Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Delights.Modules.Hello.GraphQL Assembly : Delights.Modules.Hello.dll Syntax public class Message : IMessage Constructors Message(String) Declaration public Message(string content) Parameters Type Name Description System.String content Properties Content Declaration public string Content { get; } Property Value Type Description System.String Implements IMessage"
  },
  "api/delights/Delights.Modules.Hello.GraphQL.MessageConnection.html": {
    "href": "api/delights/Delights.Modules.Hello.GraphQL.MessageConnection.html",
    "title": "Class MessageConnection | Delights",
    "keywords": "Class MessageConnection Inheritance System.Object MessageConnection Implements IMessageConnection Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Delights.Modules.Hello.GraphQL Assembly : Delights.Modules.Hello.dll Syntax public class MessageConnection : IMessageConnection Constructors MessageConnection(IReadOnlyList<IMessage>) Declaration public MessageConnection(IReadOnlyList<IMessage> nodes) Parameters Type Name Description System.Collections.Generic.IReadOnlyList < IMessage > nodes Properties Nodes Declaration public IReadOnlyList<IMessage> Nodes { get; } Property Value Type Description System.Collections.Generic.IReadOnlyList < IMessage > Implements IMessageConnection"
  },
  "api/delights/Delights.Modules.Hello.GraphQL.Module.html": {
    "href": "api/delights/Delights.Modules.Hello.GraphQL.Module.html",
    "title": "Class Module | Delights",
    "keywords": "Class Module Inheritance System.Object Module Implements StrawberryShake.IDocument Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Delights.Modules.Hello.GraphQL Assembly : Delights.Modules.Hello.dll Syntax public class Module : IDocument Properties Content Declaration public ReadOnlySpan<byte> Content { get; } Property Value Type Description System.ReadOnlySpan < System.Byte > Default Declaration public static Module Default { get; } Property Value Type Description Module Hash Declaration public ReadOnlySpan<byte> Hash { get; } Property Value Type Description System.ReadOnlySpan < System.Byte > HashName Declaration public ReadOnlySpan<byte> HashName { get; } Property Value Type Description System.ReadOnlySpan < System.Byte > Methods ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Implements StrawberryShake.IDocument"
  },
  "api/delights/Delights.Modules.Hello.HelloModule.html": {
    "href": "api/delights/Delights.Modules.Hello.HelloModule.html",
    "title": "Class HelloModule | Delights",
    "keywords": "Class HelloModule Inheritance System.Object Module < ModuleService > Module < ModuleService , ModuleOption > RazorComponentClientModule < ModuleService , ModuleOption , ModuleUI > HelloModule Implements IRazorComponentClientModule < ModuleService , ModuleOption , ModuleUI > IModule < ModuleService , ModuleOption > IModule < ModuleService > IRazorComponentClientModule IModule Inherited Members RazorComponentClientModule<ModuleService, ModuleOption, ModuleUI>.RegisterUI(IServiceCollection) RazorComponentClientModule<ModuleService, ModuleOption, ModuleUI>.RegisterUIService(IServiceCollection) RazorComponentClientModule<ModuleService, ModuleOption, ModuleUI>.RegisterService(IServiceCollection) RazorComponentClientModule<ModuleService, ModuleOption, ModuleUI>.GetUI(IServiceProvider) RazorComponentClientModule<ModuleService, ModuleOption, ModuleUI>.GetUIService(IServiceProvider) RazorComponentClientModule<ModuleService, ModuleOption, ModuleUI>.IRazorComponentClientModule.GetUI(IServiceProvider) RazorComponentClientModule<ModuleService, ModuleOption, ModuleUI>.IRazorComponentClientModule.GetUIService(IServiceProvider) Module<ModuleService, ModuleOption>.OptionConfigurations Module<ModuleService, ModuleOption>.OptionsSetup Module<ModuleService, ModuleOption>.GetSetupOptions(ModuleOption) Module<ModuleService, ModuleOption>.RegisterOptions(IServiceCollection) Module<ModuleService, ModuleOption>.RegisterService(IServiceCollection) Module<ModuleService, ModuleOption>.SetupOptions(Action<ModuleOption>) Module<ModuleService, ModuleOption>.ConfigureOptions(Action<ModuleOption, IServiceProvider>) Module<ModuleService, ModuleOption>.GetOption(IServiceProvider) Module<ModuleService>.Manifest Module<ModuleService>.GetService(IServiceProvider) Module<ModuleService>.IModule.GetService(IServiceProvider) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Delights.Modules.Hello Assembly : Delights.Modules.Hello.dll Syntax public class HelloModule : RazorComponentClientModule<ModuleService, ModuleOption, ModuleUI>, IRazorComponentClientModule<ModuleService, ModuleOption, ModuleUI>, IModule<ModuleService, ModuleOption>, IModule<ModuleService>, IRazorComponentClientModule, IModule Constructors HelloModule() Declaration public HelloModule() Methods RegisterService(IServiceCollection) Declaration public override void RegisterService(IServiceCollection services) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services Overrides Modulight.Modules.Client.RazorComponents.RazorComponentClientModule<Delights.Modules.Hello.ModuleService, Delights.Modules.Hello.ModuleOption, Delights.Modules.Hello.ModuleUI>.RegisterService(Microsoft.Extensions.DependencyInjection.IServiceCollection) Setup(IModuleHostBuilder) Declaration public override void Setup(IModuleHostBuilder host) Parameters Type Name Description IModuleHostBuilder host Overrides Modulight.Modules.Module<Delights.Modules.Hello.ModuleService>.Setup(Modulight.Modules.IModuleHostBuilder) Implements IRazorComponentClientModule<TUIService, TOption, TUI> IModule<TService, TOption> IModule<TService> IRazorComponentClientModule IModule"
  },
  "api/delights/Delights.Modules.Hello.html": {
    "href": "api/delights/Delights.Modules.Hello.html",
    "title": "Namespace Delights.Modules.Hello | Delights",
    "keywords": "Namespace Delights.Modules.Hello Classes HelloModule ModuleExtensions ModuleOption ModuleService ModuleUI"
  },
  "api/delights/Delights.Modules.Hello.ModuleExtensions.html": {
    "href": "api/delights/Delights.Modules.Hello.ModuleExtensions.html",
    "title": "Class ModuleExtensions | Delights",
    "keywords": "Class ModuleExtensions Inheritance System.Object ModuleExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Delights.Modules.Hello Assembly : Delights.Modules.Hello.dll Syntax public static class ModuleExtensions Methods AddHelloModule(IModuleHostBuilder, Action<ModuleOption>, Action<ModuleOption, IServiceProvider>) Declaration public static IModuleHostBuilder AddHelloModule(this IModuleHostBuilder modules, Action<ModuleOption> setupOptions = null, Action<ModuleOption, IServiceProvider> configureOptions = null) Parameters Type Name Description IModuleHostBuilder modules System.Action < ModuleOption > setupOptions System.Action < ModuleOption , System.IServiceProvider > configureOptions Returns Type Description IModuleHostBuilder"
  },
  "api/delights/Delights.Modules.Hello.ModuleOption.html": {
    "href": "api/delights/Delights.Modules.Hello.ModuleOption.html",
    "title": "Class ModuleOption | Delights",
    "keywords": "Class ModuleOption Inheritance System.Object ModuleOption Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Delights.Modules.Hello Assembly : Delights.Modules.Hello.dll Syntax public class ModuleOption Properties GraphQLEndpoint Declaration public string GraphQLEndpoint { get; set; } Property Value Type Description System.String"
  },
  "api/delights/Delights.Modules.Hello.ModuleService.html": {
    "href": "api/delights/Delights.Modules.Hello.ModuleService.html",
    "title": "Class ModuleService | Delights",
    "keywords": "Class ModuleService Inheritance System.Object ModuleService Implements IModuleService Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Delights.Modules.Hello Assembly : Delights.Modules.Hello.dll Syntax public class ModuleService : IModuleService Constructors ModuleService(IHelloGraphQLClient) Declaration public ModuleService(IHelloGraphQLClient graphQLClient) Parameters Type Name Description IHelloGraphQLClient graphQLClient Properties GraphQLClient Declaration public IHelloGraphQLClient GraphQLClient { get; } Property Value Type Description IHelloGraphQLClient Implements IModuleService"
  },
  "api/delights/Delights.Modules.Hello.ModuleUI.html": {
    "href": "api/delights/Delights.Modules.Hello.ModuleUI.html",
    "title": "Class ModuleUI | Delights",
    "keywords": "Class ModuleUI Inheritance System.Object ModuleUI ModuleUI Implements System.IDisposable System.IAsyncDisposable IModuleUI Inherited Members ModuleUI.RootPath ModuleUI.Contains(String) ModuleUI.Resources ModuleUI.JSRuntime ModuleUI.GetJSModule(String, String) ModuleUI.GetEntryJSModule() ModuleUI.DisposeAsyncCore() ModuleUI.DisposeAsync() ModuleUI.Dispose(Boolean) ModuleUI.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Delights.Modules.Hello Assembly : Delights.Modules.Hello.dll Syntax public class ModuleUI : ModuleUI, IDisposable, IAsyncDisposable, IModuleUI Constructors ModuleUI(IJSRuntime, ILogger<ModuleUI>) Declaration public ModuleUI(IJSRuntime jsRuntime, ILogger<ModuleUI> logger) Parameters Type Name Description Microsoft.JSInterop.IJSRuntime jsRuntime Microsoft.Extensions.Logging.ILogger < ModuleUI > logger Properties Icon Declaration public override RenderFragment Icon { get; } Property Value Type Description Microsoft.AspNetCore.Components.RenderFragment Overrides ModuleUI.Icon Methods Prompt(String) Declaration public ValueTask Prompt(string message) Parameters Type Name Description System.String message Returns Type Description System.Threading.Tasks.ValueTask Implements System.IDisposable System.IAsyncDisposable IModuleUI"
  },
  "api/delights/Delights.Modules.Hello.Server.HelloServerModule.html": {
    "href": "api/delights/Delights.Modules.Hello.Server.HelloServerModule.html",
    "title": "Class HelloServerModule | Delights",
    "keywords": "Class HelloServerModule Inheritance System.Object Module < ModuleService > Module < ModuleService , ModuleOption > GraphQLServerModule < ModuleService , ModuleOption > HelloServerModule Implements IModule < ModuleService , ModuleOption > IModule < ModuleService > IGraphQLServerModule IModule Inherited Members GraphQLServerModule<ModuleService, ModuleOption>.QueryType GraphQLServerModule<ModuleService, ModuleOption>.MutationType GraphQLServerModule<ModuleService, ModuleOption>.SubscriptionType GraphQLServerModule<ModuleService, ModuleOption>.SetupOptions(Action<ModuleOption>) GraphQLServerModule<ModuleService, ModuleOption>.RegisterGraphQLService(IServiceCollection) GraphQLServerModule<ModuleService, ModuleOption>.RegisterService(IServiceCollection) GraphQLServerModule<ModuleService, ModuleOption>.MapEndpoint(IEndpointRouteBuilder, IServiceProvider) Module<ModuleService, ModuleOption>.OptionConfigurations Module<ModuleService, ModuleOption>.OptionsSetup Module<ModuleService, ModuleOption>.GetSetupOptions(ModuleOption) Module<ModuleService, ModuleOption>.RegisterOptions(IServiceCollection) Module<ModuleService, ModuleOption>.RegisterService(IServiceCollection) Module<ModuleService, ModuleOption>.SetupOptions(Action<ModuleOption>) Module<ModuleService, ModuleOption>.ConfigureOptions(Action<ModuleOption, IServiceProvider>) Module<ModuleService, ModuleOption>.GetOption(IServiceProvider) Module<ModuleService>.Manifest Module<ModuleService>.RegisterService(IServiceCollection) Module<ModuleService>.Setup(IModuleHostBuilder) Module<ModuleService>.GetService(IServiceProvider) Module<ModuleService>.IModule.GetService(IServiceProvider) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Delights.Modules.Hello.Server Assembly : Delights.Modules.Hello.Server.dll Syntax public class HelloServerModule : GraphQLServerModule<ModuleService, ModuleOption>, IModule<ModuleService, ModuleOption>, IModule<ModuleService>, IGraphQLServerModule, IModule Constructors HelloServerModule() Declaration public HelloServerModule() Properties QueryType Declaration public override Type QueryType { get; } Property Value Type Description System.Type Overrides Modulight.Modules.Server.GraphQL.GraphQLServerModule<ModuleService, Delights.Modules.Hello.Server.ModuleOption>.QueryType Implements IModule<TService, TOption> IModule<TService> IGraphQLServerModule IModule"
  },
  "api/delights/Delights.Modules.Hello.Server.html": {
    "href": "api/delights/Delights.Modules.Hello.Server.html",
    "title": "Namespace Delights.Modules.Hello.Server | Delights",
    "keywords": "Namespace Delights.Modules.Hello.Server Classes HelloServerModule ModuleExtensions ModuleOption ModuleQuery"
  },
  "api/delights/Delights.Modules.Hello.Server.ModuleExtensions.html": {
    "href": "api/delights/Delights.Modules.Hello.Server.ModuleExtensions.html",
    "title": "Class ModuleExtensions | Delights",
    "keywords": "Class ModuleExtensions Inheritance System.Object ModuleExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Delights.Modules.Hello.Server Assembly : Delights.Modules.Hello.Server.dll Syntax public static class ModuleExtensions Methods AddHelloModule(IModuleHostBuilder, Action<ModuleOption>, Action<ModuleOption, IServiceProvider>) Declaration public static IModuleHostBuilder AddHelloModule(this IModuleHostBuilder modules, Action<ModuleOption> setupOptions = null, Action<ModuleOption, IServiceProvider> configureOptions = null) Parameters Type Name Description IModuleHostBuilder modules System.Action < ModuleOption > setupOptions System.Action < ModuleOption , System.IServiceProvider > configureOptions Returns Type Description IModuleHostBuilder"
  },
  "api/delights/Delights.Modules.Hello.Server.ModuleOption.html": {
    "href": "api/delights/Delights.Modules.Hello.Server.ModuleOption.html",
    "title": "Class ModuleOption | Delights",
    "keywords": "Class ModuleOption Inheritance System.Object GraphQLServerModuleOption ModuleOption Implements IGraphQLServerModuleOption Inherited Members GraphQLServerModuleOption.SchemaName GraphQLServerModuleOption.Endpoint System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Delights.Modules.Hello.Server Assembly : Delights.Modules.Hello.Server.dll Syntax public class ModuleOption : GraphQLServerModuleOption, IGraphQLServerModuleOption Implements IGraphQLServerModuleOption"
  },
  "api/delights/Delights.Modules.Hello.Server.ModuleQuery.html": {
    "href": "api/delights/Delights.Modules.Hello.Server.ModuleQuery.html",
    "title": "Class ModuleQuery | Delights",
    "keywords": "Class ModuleQuery Inheritance System.Object ModuleQuery Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Delights.Modules.Hello.Server Assembly : Delights.Modules.Hello.Server.dll Syntax public class ModuleQuery Methods GetMessages(ModuleService) Declaration [UsePaging(null)] [UseProjection] [UseFiltering(null)] [UseSorting(null)] public IQueryable<Message> GetMessages([Service] ModuleService service) Parameters Type Name Description ModuleService service Returns Type Description System.Linq.IQueryable < Message >"
  },
  "api/delights/Delights.Modules.ModuleManager.GraphQL.GetModules.html": {
    "href": "api/delights/Delights.Modules.ModuleManager.GraphQL.GetModules.html",
    "title": "Class GetModules | Delights",
    "keywords": "Class GetModules Inheritance System.Object GetModules Implements IGetModules Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Delights.Modules.ModuleManager.GraphQL Assembly : Delights.Modules.ModuleManager.dll Syntax public class GetModules : IGetModules Constructors GetModules(IModuleManifestConnection) Declaration public GetModules(IModuleManifestConnection modules) Parameters Type Name Description IModuleManifestConnection modules Properties Modules Declaration public IModuleManifestConnection Modules { get; } Property Value Type Description IModuleManifestConnection Implements IGetModules"
  },
  "api/delights/Delights.Modules.ModuleManager.GraphQL.GetModulesOperation.html": {
    "href": "api/delights/Delights.Modules.ModuleManager.GraphQL.GetModulesOperation.html",
    "title": "Class GetModulesOperation | Delights",
    "keywords": "Class GetModulesOperation Inheritance System.Object GetModulesOperation Implements StrawberryShake.IOperation < IGetModules > StrawberryShake.IOperation Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Delights.Modules.ModuleManager.GraphQL Assembly : Delights.Modules.ModuleManager.dll Syntax public class GetModulesOperation : IOperation<IGetModules>, IOperation Properties Document Declaration public IDocument Document { get; } Property Value Type Description StrawberryShake.IDocument Kind Declaration public OperationKind Kind { get; } Property Value Type Description StrawberryShake.OperationKind Name Declaration public string Name { get; } Property Value Type Description System.String ResultType Declaration public Type ResultType { get; } Property Value Type Description System.Type Methods GetVariableValues() Declaration public IReadOnlyList<VariableValue> GetVariableValues() Returns Type Description System.Collections.Generic.IReadOnlyList < StrawberryShake.VariableValue > Implements StrawberryShake.IOperation<T> StrawberryShake.IOperation"
  },
  "api/delights/Delights.Modules.ModuleManager.GraphQL.GetModulesResultParser.html": {
    "href": "api/delights/Delights.Modules.ModuleManager.GraphQL.GetModulesResultParser.html",
    "title": "Class GetModulesResultParser | Delights",
    "keywords": "Class GetModulesResultParser Inheritance System.Object StrawberryShake.Http.JsonResultParserBase < IGetModules > GetModulesResultParser Implements StrawberryShake.IResultParser Inherited Members StrawberryShake.Http.JsonResultParserBase<Delights.Modules.ModuleManager.GraphQL.IGetModules>.Parse(System.ReadOnlySpan<System.Byte>, StrawberryShake.IOperationResultBuilder) StrawberryShake.Http.JsonResultParserBase<Delights.Modules.ModuleManager.GraphQL.IGetModules>.ParseAsync(System.IO.Stream, StrawberryShake.IOperationResultBuilder, System.Threading.CancellationToken) StrawberryShake.Http.JsonResultParserBase<Delights.Modules.ModuleManager.GraphQL.IGetModules>.TypeName StrawberryShake.Http.JsonResultParserBase<Delights.Modules.ModuleManager.GraphQL.IGetModules>.ResultType System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Delights.Modules.ModuleManager.GraphQL Assembly : Delights.Modules.ModuleManager.dll Syntax public class GetModulesResultParser : JsonResultParserBase<IGetModules>, IResultParser Constructors GetModulesResultParser(IValueSerializerCollection) Declaration public GetModulesResultParser(IValueSerializerCollection serializerResolver) Parameters Type Name Description StrawberryShake.IValueSerializerCollection serializerResolver Methods ParserData(JsonElement) Declaration protected override IGetModules ParserData(JsonElement data) Parameters Type Name Description System.Text.Json.JsonElement data Returns Type Description IGetModules Overrides StrawberryShake.Http.JsonResultParserBase<Delights.Modules.ModuleManager.GraphQL.IGetModules>.ParserData(System.Text.Json.JsonElement) Implements StrawberryShake.IResultParser"
  },
  "api/delights/Delights.Modules.ModuleManager.GraphQL.html": {
    "href": "api/delights/Delights.Modules.ModuleManager.GraphQL.html",
    "title": "Namespace Delights.Modules.ModuleManager.GraphQL | Delights",
    "keywords": "Namespace Delights.Modules.ModuleManager.GraphQL Classes GetModules GetModulesOperation GetModulesResultParser Module ModuleManagerGraphQLClient ModuleManagerGraphQLClientServiceCollectionExtensions ModuleManifest ModuleManifestConnection Interfaces IGetModules IModuleManagerGraphQLClient IModuleManifest IModuleManifestConnection"
  },
  "api/delights/Delights.Modules.ModuleManager.GraphQL.IGetModules.html": {
    "href": "api/delights/Delights.Modules.ModuleManager.GraphQL.IGetModules.html",
    "title": "Interface IGetModules | Delights",
    "keywords": "Interface IGetModules Namespace : Delights.Modules.ModuleManager.GraphQL Assembly : Delights.Modules.ModuleManager.dll Syntax public interface IGetModules Properties Modules Declaration IModuleManifestConnection Modules { get; } Property Value Type Description IModuleManifestConnection"
  },
  "api/delights/Delights.Modules.ModuleManager.GraphQL.IModuleManagerGraphQLClient.html": {
    "href": "api/delights/Delights.Modules.ModuleManager.GraphQL.IModuleManagerGraphQLClient.html",
    "title": "Interface IModuleManagerGraphQLClient | Delights",
    "keywords": "Interface IModuleManagerGraphQLClient Namespace : Delights.Modules.ModuleManager.GraphQL Assembly : Delights.Modules.ModuleManager.dll Syntax public interface IModuleManagerGraphQLClient Methods GetModulesAsync(GetModulesOperation, CancellationToken) Declaration Task<IOperationResult<IGetModules>> GetModulesAsync(GetModulesOperation operation, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description GetModulesOperation operation System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < StrawberryShake.IOperationResult < IGetModules >> GetModulesAsync(CancellationToken) Declaration Task<IOperationResult<IGetModules>> GetModulesAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < StrawberryShake.IOperationResult < IGetModules >>"
  },
  "api/delights/Delights.Modules.ModuleManager.GraphQL.IModuleManifest.html": {
    "href": "api/delights/Delights.Modules.ModuleManager.GraphQL.IModuleManifest.html",
    "title": "Interface IModuleManifest | Delights",
    "keywords": "Interface IModuleManifest Namespace : Delights.Modules.ModuleManager.GraphQL Assembly : Delights.Modules.ModuleManager.dll Syntax public interface IModuleManifest Properties Author Declaration string Author { get; } Property Value Type Description System.String Description Declaration string Description { get; } Property Value Type Description System.String DisplayName Declaration string DisplayName { get; } Property Value Type Description System.String EntryAssembly Declaration string EntryAssembly { get; } Property Value Type Description System.String Name Declaration string Name { get; } Property Value Type Description System.String Url Declaration string Url { get; } Property Value Type Description System.String Version Declaration string Version { get; } Property Value Type Description System.String"
  },
  "api/delights/Delights.Modules.ModuleManager.GraphQL.IModuleManifestConnection.html": {
    "href": "api/delights/Delights.Modules.ModuleManager.GraphQL.IModuleManifestConnection.html",
    "title": "Interface IModuleManifestConnection | Delights",
    "keywords": "Interface IModuleManifestConnection Namespace : Delights.Modules.ModuleManager.GraphQL Assembly : Delights.Modules.ModuleManager.dll Syntax public interface IModuleManifestConnection Properties Nodes Declaration IReadOnlyList<IModuleManifest> Nodes { get; } Property Value Type Description System.Collections.Generic.IReadOnlyList < IModuleManifest >"
  },
  "api/delights/Delights.Modules.ModuleManager.GraphQL.Module.html": {
    "href": "api/delights/Delights.Modules.ModuleManager.GraphQL.Module.html",
    "title": "Class Module | Delights",
    "keywords": "Class Module Inheritance System.Object Module Implements StrawberryShake.IDocument Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Delights.Modules.ModuleManager.GraphQL Assembly : Delights.Modules.ModuleManager.dll Syntax public class Module : IDocument Properties Content Declaration public ReadOnlySpan<byte> Content { get; } Property Value Type Description System.ReadOnlySpan < System.Byte > Default Declaration public static Module Default { get; } Property Value Type Description Module Hash Declaration public ReadOnlySpan<byte> Hash { get; } Property Value Type Description System.ReadOnlySpan < System.Byte > HashName Declaration public ReadOnlySpan<byte> HashName { get; } Property Value Type Description System.ReadOnlySpan < System.Byte > Methods ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Implements StrawberryShake.IDocument"
  },
  "api/delights/Delights.Modules.ModuleManager.GraphQL.ModuleManagerGraphQLClient.html": {
    "href": "api/delights/Delights.Modules.ModuleManager.GraphQL.ModuleManagerGraphQLClient.html",
    "title": "Class ModuleManagerGraphQLClient | Delights",
    "keywords": "Class ModuleManagerGraphQLClient Inheritance System.Object ModuleManagerGraphQLClient Implements IModuleManagerGraphQLClient Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Delights.Modules.ModuleManager.GraphQL Assembly : Delights.Modules.ModuleManager.dll Syntax public class ModuleManagerGraphQLClient : IModuleManagerGraphQLClient Constructors ModuleManagerGraphQLClient(IOperationExecutorPool) Declaration public ModuleManagerGraphQLClient(IOperationExecutorPool executorPool) Parameters Type Name Description StrawberryShake.IOperationExecutorPool executorPool Methods GetModulesAsync(GetModulesOperation, CancellationToken) Declaration public Task<IOperationResult<IGetModules>> GetModulesAsync(GetModulesOperation operation, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description GetModulesOperation operation System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < StrawberryShake.IOperationResult < IGetModules >> GetModulesAsync(CancellationToken) Declaration public Task<IOperationResult<IGetModules>> GetModulesAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < StrawberryShake.IOperationResult < IGetModules >> Implements IModuleManagerGraphQLClient"
  },
  "api/delights/Delights.Modules.ModuleManager.GraphQL.ModuleManagerGraphQLClientServiceCollectionExtensions.html": {
    "href": "api/delights/Delights.Modules.ModuleManager.GraphQL.ModuleManagerGraphQLClientServiceCollectionExtensions.html",
    "title": "Class ModuleManagerGraphQLClientServiceCollectionExtensions | Delights",
    "keywords": "Class ModuleManagerGraphQLClientServiceCollectionExtensions Inheritance System.Object ModuleManagerGraphQLClientServiceCollectionExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Delights.Modules.ModuleManager.GraphQL Assembly : Delights.Modules.ModuleManager.dll Syntax public static class ModuleManagerGraphQLClientServiceCollectionExtensions Methods AddModuleManagerGraphQLClient(IServiceCollection) Declaration public static IOperationClientBuilder AddModuleManagerGraphQLClient(this IServiceCollection serviceCollection) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection Returns Type Description StrawberryShake.Configuration.IOperationClientBuilder"
  },
  "api/delights/Delights.Modules.ModuleManager.GraphQL.ModuleManifest.html": {
    "href": "api/delights/Delights.Modules.ModuleManager.GraphQL.ModuleManifest.html",
    "title": "Class ModuleManifest | Delights",
    "keywords": "Class ModuleManifest Inheritance System.Object ModuleManifest Implements IModuleManifest Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Delights.Modules.ModuleManager.GraphQL Assembly : Delights.Modules.ModuleManager.dll Syntax public class ModuleManifest : IModuleManifest Constructors ModuleManifest(String, String, String, String, String, String, String) Declaration public ModuleManifest(string name, string entryAssembly, string displayName, string description, string version, string author, string url) Parameters Type Name Description System.String name System.String entryAssembly System.String displayName System.String description System.String version System.String author System.String url Properties Author Declaration public string Author { get; } Property Value Type Description System.String Description Declaration public string Description { get; } Property Value Type Description System.String DisplayName Declaration public string DisplayName { get; } Property Value Type Description System.String EntryAssembly Declaration public string EntryAssembly { get; } Property Value Type Description System.String Name Declaration public string Name { get; } Property Value Type Description System.String Url Declaration public string Url { get; } Property Value Type Description System.String Version Declaration public string Version { get; } Property Value Type Description System.String Implements IModuleManifest"
  },
  "api/delights/Delights.Modules.ModuleManager.GraphQL.ModuleManifestConnection.html": {
    "href": "api/delights/Delights.Modules.ModuleManager.GraphQL.ModuleManifestConnection.html",
    "title": "Class ModuleManifestConnection | Delights",
    "keywords": "Class ModuleManifestConnection Inheritance System.Object ModuleManifestConnection Implements IModuleManifestConnection Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Delights.Modules.ModuleManager.GraphQL Assembly : Delights.Modules.ModuleManager.dll Syntax public class ModuleManifestConnection : IModuleManifestConnection Constructors ModuleManifestConnection(IReadOnlyList<IModuleManifest>) Declaration public ModuleManifestConnection(IReadOnlyList<IModuleManifest> nodes) Parameters Type Name Description System.Collections.Generic.IReadOnlyList < IModuleManifest > nodes Properties Nodes Declaration public IReadOnlyList<IModuleManifest> Nodes { get; } Property Value Type Description System.Collections.Generic.IReadOnlyList < IModuleManifest > Implements IModuleManifestConnection"
  },
  "api/delights/Delights.Modules.ModuleManager.html": {
    "href": "api/delights/Delights.Modules.ModuleManager.html",
    "title": "Namespace Delights.Modules.ModuleManager | Delights",
    "keywords": "Namespace Delights.Modules.ModuleManager Classes ModuleExtensions ModuleManagerModule ModuleOption ModuleService ModuleUI SharedManifest"
  },
  "api/delights/Delights.Modules.ModuleManager.ModuleExtensions.html": {
    "href": "api/delights/Delights.Modules.ModuleManager.ModuleExtensions.html",
    "title": "Class ModuleExtensions | Delights",
    "keywords": "Class ModuleExtensions Inheritance System.Object ModuleExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Delights.Modules.ModuleManager Assembly : Delights.Modules.ModuleManager.dll Syntax public static class ModuleExtensions Methods AddModuleManagerModule(IModuleHostBuilder, Action<ModuleOption>, Action<ModuleOption, IServiceProvider>) Declaration public static IModuleHostBuilder AddModuleManagerModule(this IModuleHostBuilder modules, Action<ModuleOption> setupOptions = null, Action<ModuleOption, IServiceProvider> configureOptions = null) Parameters Type Name Description IModuleHostBuilder modules System.Action < ModuleOption > setupOptions System.Action < ModuleOption , System.IServiceProvider > configureOptions Returns Type Description IModuleHostBuilder"
  },
  "api/delights/Delights.Modules.ModuleManager.ModuleManagerModule.html": {
    "href": "api/delights/Delights.Modules.ModuleManager.ModuleManagerModule.html",
    "title": "Class ModuleManagerModule | Delights",
    "keywords": "Class ModuleManagerModule Inheritance System.Object Module < ModuleService > Module < ModuleService , ModuleOption > RazorComponentClientModule < ModuleService , ModuleOption , ModuleUI > ModuleManagerModule Implements IRazorComponentClientModule < ModuleService , ModuleOption , ModuleUI > IModule < ModuleService , ModuleOption > IModule < ModuleService > IRazorComponentClientModule IModule Inherited Members RazorComponentClientModule<ModuleService, ModuleOption, ModuleUI>.RegisterUI(IServiceCollection) RazorComponentClientModule<ModuleService, ModuleOption, ModuleUI>.RegisterUIService(IServiceCollection) RazorComponentClientModule<ModuleService, ModuleOption, ModuleUI>.RegisterService(IServiceCollection) RazorComponentClientModule<ModuleService, ModuleOption, ModuleUI>.GetUI(IServiceProvider) RazorComponentClientModule<ModuleService, ModuleOption, ModuleUI>.GetUIService(IServiceProvider) RazorComponentClientModule<ModuleService, ModuleOption, ModuleUI>.IRazorComponentClientModule.GetUI(IServiceProvider) RazorComponentClientModule<ModuleService, ModuleOption, ModuleUI>.IRazorComponentClientModule.GetUIService(IServiceProvider) Module<ModuleService, ModuleOption>.OptionConfigurations Module<ModuleService, ModuleOption>.OptionsSetup Module<ModuleService, ModuleOption>.GetSetupOptions(ModuleOption) Module<ModuleService, ModuleOption>.RegisterOptions(IServiceCollection) Module<ModuleService, ModuleOption>.RegisterService(IServiceCollection) Module<ModuleService, ModuleOption>.SetupOptions(Action<ModuleOption>) Module<ModuleService, ModuleOption>.ConfigureOptions(Action<ModuleOption, IServiceProvider>) Module<ModuleService, ModuleOption>.GetOption(IServiceProvider) Module<ModuleService>.Manifest Module<ModuleService>.GetService(IServiceProvider) Module<ModuleService>.IModule.GetService(IServiceProvider) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Delights.Modules.ModuleManager Assembly : Delights.Modules.ModuleManager.dll Syntax public class ModuleManagerModule : RazorComponentClientModule<ModuleService, ModuleOption, ModuleUI>, IRazorComponentClientModule<ModuleService, ModuleOption, ModuleUI>, IModule<ModuleService, ModuleOption>, IModule<ModuleService>, IRazorComponentClientModule, IModule Constructors ModuleManagerModule() Declaration public ModuleManagerModule() Methods RegisterService(IServiceCollection) Declaration public override void RegisterService(IServiceCollection services) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services Overrides Modulight.Modules.Client.RazorComponents.RazorComponentClientModule<Delights.Modules.ModuleManager.ModuleService, Delights.Modules.ModuleManager.ModuleOption, Delights.Modules.ModuleManager.ModuleUI>.RegisterService(Microsoft.Extensions.DependencyInjection.IServiceCollection) Setup(IModuleHostBuilder) Declaration public override void Setup(IModuleHostBuilder host) Parameters Type Name Description IModuleHostBuilder host Overrides Modulight.Modules.Module<Delights.Modules.ModuleManager.ModuleService>.Setup(Modulight.Modules.IModuleHostBuilder) Implements IRazorComponentClientModule<TUIService, TOption, TUI> IModule<TService, TOption> IModule<TService> IRazorComponentClientModule IModule"
  },
  "api/delights/Delights.Modules.ModuleManager.ModuleOption.html": {
    "href": "api/delights/Delights.Modules.ModuleManager.ModuleOption.html",
    "title": "Class ModuleOption | Delights",
    "keywords": "Class ModuleOption Inheritance System.Object ModuleOption Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Delights.Modules.ModuleManager Assembly : Delights.Modules.ModuleManager.dll Syntax public class ModuleOption Properties GraphQLEndpoint Declaration public string GraphQLEndpoint { get; set; } Property Value Type Description System.String"
  },
  "api/delights/Delights.Modules.ModuleManager.ModuleService.html": {
    "href": "api/delights/Delights.Modules.ModuleManager.ModuleService.html",
    "title": "Class ModuleService | Delights",
    "keywords": "Class ModuleService Inheritance System.Object ModuleService Implements IModuleService Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Delights.Modules.ModuleManager Assembly : Delights.Modules.ModuleManager.dll Syntax public class ModuleService : IModuleService Constructors ModuleService(IModuleManagerGraphQLClient) Declaration public ModuleService(IModuleManagerGraphQLClient graphQLClient) Parameters Type Name Description IModuleManagerGraphQLClient graphQLClient Properties GraphQLClient Declaration public IModuleManagerGraphQLClient GraphQLClient { get; } Property Value Type Description IModuleManagerGraphQLClient Implements IModuleService"
  },
  "api/delights/Delights.Modules.ModuleManager.ModuleUI.html": {
    "href": "api/delights/Delights.Modules.ModuleManager.ModuleUI.html",
    "title": "Class ModuleUI | Delights",
    "keywords": "Class ModuleUI Inheritance System.Object ModuleUI ModuleUI Implements System.IDisposable System.IAsyncDisposable IModuleUI Inherited Members ModuleUI.RootPath ModuleUI.Contains(String) ModuleUI.Resources ModuleUI.JSRuntime ModuleUI.GetJSModule(String, String) ModuleUI.GetEntryJSModule() ModuleUI.DisposeAsyncCore() ModuleUI.DisposeAsync() ModuleUI.Dispose(Boolean) ModuleUI.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Delights.Modules.ModuleManager Assembly : Delights.Modules.ModuleManager.dll Syntax public class ModuleUI : ModuleUI, IDisposable, IAsyncDisposable, IModuleUI Constructors ModuleUI(IJSRuntime, ILogger<ModuleUI>) Declaration public ModuleUI(IJSRuntime jsRuntime, ILogger<ModuleUI> logger) Parameters Type Name Description Microsoft.JSInterop.IJSRuntime jsRuntime Microsoft.Extensions.Logging.ILogger < ModuleUI > logger Properties Icon Declaration public override RenderFragment Icon { get; } Property Value Type Description Microsoft.AspNetCore.Components.RenderFragment Overrides ModuleUI.Icon Methods Prompt(String) Declaration public ValueTask Prompt(string message) Parameters Type Name Description System.String message Returns Type Description System.Threading.Tasks.ValueTask Implements System.IDisposable System.IAsyncDisposable IModuleUI"
  },
  "api/delights/Delights.Modules.ModuleManager.Server.html": {
    "href": "api/delights/Delights.Modules.ModuleManager.Server.html",
    "title": "Namespace Delights.Modules.ModuleManager.Server | Delights",
    "keywords": "Namespace Delights.Modules.ModuleManager.Server Classes ModuleExtensions ModuleManagerServerModule ModuleOption ModuleQuery ModuleService"
  },
  "api/delights/Delights.Modules.ModuleManager.Server.ModuleExtensions.html": {
    "href": "api/delights/Delights.Modules.ModuleManager.Server.ModuleExtensions.html",
    "title": "Class ModuleExtensions | Delights",
    "keywords": "Class ModuleExtensions Inheritance System.Object ModuleExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Delights.Modules.ModuleManager.Server Assembly : Delights.Modules.ModuleManager.Server.dll Syntax public static class ModuleExtensions Methods AddModuleManagerModule(IModuleHostBuilder, Action<ModuleOption>, Action<ModuleOption, IServiceProvider>) Declaration public static IModuleHostBuilder AddModuleManagerModule(this IModuleHostBuilder modules, Action<ModuleOption> setupOptions = null, Action<ModuleOption, IServiceProvider> configureOptions = null) Parameters Type Name Description IModuleHostBuilder modules System.Action < ModuleOption > setupOptions System.Action < ModuleOption , System.IServiceProvider > configureOptions Returns Type Description IModuleHostBuilder"
  },
  "api/delights/Delights.Modules.ModuleManager.Server.ModuleManagerServerModule.html": {
    "href": "api/delights/Delights.Modules.ModuleManager.Server.ModuleManagerServerModule.html",
    "title": "Class ModuleManagerServerModule | Delights",
    "keywords": "Class ModuleManagerServerModule Inheritance System.Object Module < ModuleService > Module < ModuleService , ModuleOption > GraphQLServerModule < ModuleService , ModuleOption > ModuleManagerServerModule Implements IModule < ModuleService , ModuleOption > IModule < ModuleService > IGraphQLServerModule IModule Inherited Members GraphQLServerModule<ModuleService, ModuleOption>.QueryType GraphQLServerModule<ModuleService, ModuleOption>.MutationType GraphQLServerModule<ModuleService, ModuleOption>.SubscriptionType GraphQLServerModule<ModuleService, ModuleOption>.SetupOptions(Action<ModuleOption>) GraphQLServerModule<ModuleService, ModuleOption>.RegisterGraphQLService(IServiceCollection) GraphQLServerModule<ModuleService, ModuleOption>.RegisterService(IServiceCollection) GraphQLServerModule<ModuleService, ModuleOption>.MapEndpoint(IEndpointRouteBuilder, IServiceProvider) Module<ModuleService, ModuleOption>.OptionConfigurations Module<ModuleService, ModuleOption>.OptionsSetup Module<ModuleService, ModuleOption>.GetSetupOptions(ModuleOption) Module<ModuleService, ModuleOption>.RegisterOptions(IServiceCollection) Module<ModuleService, ModuleOption>.ConfigureOptions(Action<ModuleOption, IServiceProvider>) Module<ModuleService, ModuleOption>.GetOption(IServiceProvider) Module<ModuleService>.Manifest Module<ModuleService>.RegisterService(IServiceCollection) Module<ModuleService>.Setup(IModuleHostBuilder) Module<ModuleService>.GetService(IServiceProvider) Module<ModuleService>.IModule.GetService(IServiceProvider) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Delights.Modules.ModuleManager.Server Assembly : Delights.Modules.ModuleManager.Server.dll Syntax public class ModuleManagerServerModule : GraphQLServerModule<ModuleService, ModuleOption>, IModule<ModuleService, ModuleOption>, IModule<ModuleService>, IGraphQLServerModule, IModule Constructors ModuleManagerServerModule() Declaration public ModuleManagerServerModule() Properties QueryType Declaration public override Type QueryType { get; } Property Value Type Description System.Type Overrides Modulight.Modules.Server.GraphQL.GraphQLServerModule<Delights.Modules.ModuleManager.Server.ModuleService, Delights.Modules.ModuleManager.Server.ModuleOption>.QueryType Implements IModule<TService, TOption> IModule<TService> IGraphQLServerModule IModule"
  },
  "api/delights/Delights.Modules.ModuleManager.Server.ModuleOption.html": {
    "href": "api/delights/Delights.Modules.ModuleManager.Server.ModuleOption.html",
    "title": "Class ModuleOption | Delights",
    "keywords": "Class ModuleOption Inheritance System.Object GraphQLServerModuleOption ModuleOption Implements IGraphQLServerModuleOption Inherited Members GraphQLServerModuleOption.SchemaName GraphQLServerModuleOption.Endpoint System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Delights.Modules.ModuleManager.Server Assembly : Delights.Modules.ModuleManager.Server.dll Syntax public class ModuleOption : GraphQLServerModuleOption, IGraphQLServerModuleOption Implements IGraphQLServerModuleOption"
  },
  "api/delights/Delights.Modules.ModuleManager.Server.ModuleQuery.html": {
    "href": "api/delights/Delights.Modules.ModuleManager.Server.ModuleQuery.html",
    "title": "Class ModuleQuery | Delights",
    "keywords": "Class ModuleQuery Inheritance System.Object ModuleQuery Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Delights.Modules.ModuleManager.Server Assembly : Delights.Modules.ModuleManager.Server.dll Syntax public class ModuleQuery Methods GetModules(IModuleHost) Declaration [UsePaging(null)] [UseProjection] [UseFiltering(null)] [UseSorting(null)] public IQueryable<ModuleManifest> GetModules([Service] IModuleHost collection) Parameters Type Name Description IModuleHost collection Returns Type Description System.Linq.IQueryable < ModuleManifest >"
  },
  "api/delights/Delights.Modules.ModuleManager.Server.ModuleService.html": {
    "href": "api/delights/Delights.Modules.ModuleManager.Server.ModuleService.html",
    "title": "Class ModuleService | Delights",
    "keywords": "Class ModuleService Inheritance System.Object ModuleService Implements IModuleService Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Delights.Modules.ModuleManager.Server Assembly : Delights.Modules.ModuleManager.Server.dll Syntax public class ModuleService : IModuleService Constructors ModuleService(ILogger<ModuleManagerServerModule>) Declaration public ModuleService(ILogger<ModuleManagerServerModule> logger) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger < ModuleManagerServerModule > logger Properties Logger Declaration public ILogger<ModuleManagerServerModule> Logger { get; } Property Value Type Description Microsoft.Extensions.Logging.ILogger < ModuleManagerServerModule > Implements IModuleService"
  },
  "api/delights/Delights.Modules.ModuleManager.SharedManifest.html": {
    "href": "api/delights/Delights.Modules.ModuleManager.SharedManifest.html",
    "title": "Class SharedManifest | Delights",
    "keywords": "Class SharedManifest Inheritance System.Object SharedManifest Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Delights.Modules.ModuleManager Assembly : Delights.Modules.ModuleManager.dll Syntax public static class SharedManifest Fields Description Declaration public const string Description = \"Manage client modules and server modules.\" Field Value Type Description System.String"
  },
  "api/delights/Delights.UI.html": {
    "href": "api/delights/Delights.UI.html",
    "title": "Namespace Delights.UI | Delights",
    "keywords": "Namespace Delights.UI Classes MainModuleUI UIModule"
  },
  "api/delights/Delights.UI.MainModuleUI.html": {
    "href": "api/delights/Delights.UI.MainModuleUI.html",
    "title": "Class MainModuleUI | Delights",
    "keywords": "Class MainModuleUI Inheritance System.Object ModuleUI MainModuleUI Implements System.IDisposable System.IAsyncDisposable IModuleUI Inherited Members ModuleUI.RootPath ModuleUI.Contains(String) ModuleUI.Resources ModuleUI.JSRuntime ModuleUI.GetJSModule(String, String) ModuleUI.GetEntryJSModule() ModuleUI.DisposeAsyncCore() ModuleUI.DisposeAsync() ModuleUI.Dispose(Boolean) ModuleUI.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Delights.UI Assembly : Delights.UI.dll Syntax public class MainModuleUI : ModuleUI, IDisposable, IAsyncDisposable, IModuleUI Constructors MainModuleUI(IJSRuntime, ILogger<ModuleUI>) Declaration public MainModuleUI(IJSRuntime jsRuntime, ILogger<ModuleUI> logger) Parameters Type Name Description Microsoft.JSInterop.IJSRuntime jsRuntime Microsoft.Extensions.Logging.ILogger < ModuleUI > logger Properties Icon Declaration public override RenderFragment Icon { get; } Property Value Type Description Microsoft.AspNetCore.Components.RenderFragment Overrides ModuleUI.Icon Implements System.IDisposable System.IAsyncDisposable IModuleUI"
  },
  "api/delights/Delights.UI.Models.BuildStatus.html": {
    "href": "api/delights/Delights.UI.Models.BuildStatus.html",
    "title": "Class BuildStatus | Delights",
    "keywords": "Class BuildStatus Inheritance System.Object BuildStatus Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Delights.UI.Models Assembly : Delights.UI.dll Syntax public class BuildStatus Constructors BuildStatus() Declaration public BuildStatus() Properties Branch Declaration public string Branch { get; set; } Property Value Type Description System.String BuildDate Declaration public string BuildDate { get; set; } Property Value Type Description System.String Commit Declaration public string Commit { get; set; } Property Value Type Description System.String Repository Declaration public string Repository { get; set; } Property Value Type Description System.String TrimedBranch Declaration public string TrimedBranch { get; } Property Value Type Description System.String TrimedCommit Declaration public string TrimedCommit { get; } Property Value Type Description System.String Version Declaration public string Version { get; set; } Property Value Type Description System.String"
  },
  "api/delights/Delights.UI.Models.html": {
    "href": "api/delights/Delights.UI.Models.html",
    "title": "Namespace Delights.UI.Models | Delights",
    "keywords": "Namespace Delights.UI.Models Classes BuildStatus"
  },
  "api/delights/Delights.UI.Shared.html": {
    "href": "api/delights/Delights.UI.Shared.html",
    "title": "Namespace Delights.UI.Shared | Delights",
    "keywords": "Namespace Delights.UI.Shared Classes IconNames"
  },
  "api/delights/Delights.UI.Shared.IconNames.html": {
    "href": "api/delights/Delights.UI.Shared.IconNames.html",
    "title": "Class IconNames | Delights",
    "keywords": "Class IconNames Inheritance System.Object IconNames Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Delights.UI.Shared Assembly : Delights.UI.dll Syntax public static class IconNames Fields Account Declaration public const string Account = \"account\" Field Value Type Description System.String Archive Declaration public const string Archive = \"archive\" Field Value Type Description System.String Articles Declaration public const string Articles = \"feather\" Field Value Type Description System.String Category Declaration public const string Category = \"folder\" Field Value Type Description System.String ChangePassword Declaration public const string ChangePassword = \"form-textbox-password\" Field Value Type Description System.String Comment Declaration public const string Comment = \"comment\" Field Value Type Description System.String Create Declaration public const string Create = \"plus\" Field Value Type Description System.String Delete Declaration public const string Delete = \"delete\" Field Value Type Description System.String Edit Declaration public const string Edit = \"square-edit-outline\" Field Value Type Description System.String Home Declaration public const string Home = \"home\" Field Value Type Description System.String Key Declaration public const string Key = \"key\" Field Value Type Description System.String Keywords Declaration public const string Keywords = \"tag-multiple\" Field Value Type Description System.String Login Declaration public const string Login = \"login\" Field Value Type Description System.String Logout Declaration public const string Logout = \"logout\" Field Value Type Description System.String Module Declaration public const string Module = \"puzzle\" Field Value Type Description System.String Notes Declaration public const string Notes = \"file-document\" Field Value Type Description System.String Page Declaration public const string Page = \"book-open\" Field Value Type Description System.String Posts Declaration public const string Posts = \"post\" Field Value Type Description System.String Revert Declaration public const string Revert = \"backup-restore\" Field Value Type Description System.String Search Declaration public const string Search = \"magnify\" Field Value Type Description System.String Settings Declaration public const string Settings = \"cog\" Field Value Type Description System.String Slides Declaration public const string Slides = \"presentation\" Field Value Type Description System.String"
  },
  "api/delights/Delights.UI.UIModule.html": {
    "href": "api/delights/Delights.UI.UIModule.html",
    "title": "Class UIModule | Delights",
    "keywords": "Class UIModule Inheritance System.Object Module < EmptyModuleService < UIModule >> Module < EmptyModuleService < UIModule >, EmptyModuleOption < UIModule >> RazorComponentClientModule < EmptyModuleService < UIModule >, EmptyModuleOption < UIModule >, MainModuleUI > UIModule Implements IRazorComponentClientModule < EmptyModuleService < UIModule >, EmptyModuleOption < UIModule >, MainModuleUI > IModule < EmptyModuleService < UIModule >, EmptyModuleOption < UIModule >> IModule < EmptyModuleService < UIModule >> IRazorComponentClientModule IModule Inherited Members RazorComponentClientModule<EmptyModuleService<UIModule>, EmptyModuleOption<UIModule>, MainModuleUI>.RegisterUI(IServiceCollection) RazorComponentClientModule<EmptyModuleService<UIModule>, EmptyModuleOption<UIModule>, MainModuleUI>.RegisterUIService(IServiceCollection) RazorComponentClientModule<EmptyModuleService<UIModule>, EmptyModuleOption<UIModule>, MainModuleUI>.RegisterService(IServiceCollection) RazorComponentClientModule<EmptyModuleService<UIModule>, EmptyModuleOption<UIModule>, MainModuleUI>.GetUI(IServiceProvider) RazorComponentClientModule<EmptyModuleService<UIModule>, EmptyModuleOption<UIModule>, MainModuleUI>.GetUIService(IServiceProvider) RazorComponentClientModule<EmptyModuleService<UIModule>, EmptyModuleOption<UIModule>, MainModuleUI>.IRazorComponentClientModule.GetUI(IServiceProvider) RazorComponentClientModule<EmptyModuleService<UIModule>, EmptyModuleOption<UIModule>, MainModuleUI>.IRazorComponentClientModule.GetUIService(IServiceProvider) Module<EmptyModuleService<UIModule>, EmptyModuleOption<UIModule>>.OptionConfigurations Module<EmptyModuleService<UIModule>, EmptyModuleOption<UIModule>>.OptionsSetup Module<EmptyModuleService<UIModule>, EmptyModuleOption<UIModule>>.GetSetupOptions(EmptyModuleOption<UIModule>) Module<EmptyModuleService<UIModule>, EmptyModuleOption<UIModule>>.RegisterOptions(IServiceCollection) Module<EmptyModuleService<UIModule>, EmptyModuleOption<UIModule>>.RegisterService(IServiceCollection) Module<EmptyModuleService<UIModule>, EmptyModuleOption<UIModule>>.SetupOptions(Action<EmptyModuleOption<UIModule>>) Module<EmptyModuleService<UIModule>, EmptyModuleOption<UIModule>>.ConfigureOptions(Action<EmptyModuleOption<UIModule>, IServiceProvider>) Module<EmptyModuleService<UIModule>, EmptyModuleOption<UIModule>>.GetOption(IServiceProvider) Module<EmptyModuleService<UIModule>>.Manifest Module<EmptyModuleService<UIModule>>.GetService(IServiceProvider) Module<EmptyModuleService<UIModule>>.IModule.GetService(IServiceProvider) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Delights.UI Assembly : Delights.UI.dll Syntax public class UIModule : RazorComponentClientModule<EmptyModuleService<UIModule>, EmptyModuleOption<UIModule>, MainModuleUI>, IRazorComponentClientModule<EmptyModuleService<UIModule>, EmptyModuleOption<UIModule>, MainModuleUI>, IModule<EmptyModuleService<UIModule>, EmptyModuleOption<UIModule>>, IModule<EmptyModuleService<UIModule>>, IRazorComponentClientModule, IModule Constructors UIModule() Declaration public UIModule() Methods RegisterService(IServiceCollection) Declaration public override void RegisterService(IServiceCollection services) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services Overrides Modulight.Modules.Client.RazorComponents.RazorComponentClientModule<Modulight.Modules.Services.EmptyModuleService<Delights.UI.UIModule>, Modulight.Modules.Options.EmptyModuleOption<Delights.UI.UIModule>, Delights.UI.MainModuleUI>.RegisterService(Microsoft.Extensions.DependencyInjection.IServiceCollection) RegisterUI(IServiceCollection) Declaration public override void RegisterUI(IServiceCollection services) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services Overrides Modulight.Modules.Client.RazorComponents.RazorComponentClientModule<Modulight.Modules.Services.EmptyModuleService<Delights.UI.UIModule>, Modulight.Modules.Options.EmptyModuleOption<Delights.UI.UIModule>, Delights.UI.MainModuleUI>.RegisterUI(Microsoft.Extensions.DependencyInjection.IServiceCollection) Setup(IModuleHostBuilder) Declaration public override void Setup(IModuleHostBuilder host) Parameters Type Name Description IModuleHostBuilder host Overrides Modulight.Modules.Module<Modulight.Modules.Services.EmptyModuleService<Delights.UI.UIModule>>.Setup(Modulight.Modules.IModuleHostBuilder) Implements IRazorComponentClientModule<TUIService, TOption, TUI> IModule<TService, TOption> IModule<TService> IRazorComponentClientModule IModule"
  },
  "api/delights/index.html": {
    "href": "api/delights/index.html",
    "title": "Delights API | Delights",
    "keywords": "Delights API"
  },
  "api/extensions/index.html": {
    "href": "api/extensions/index.html",
    "title": "Extension API | Delights",
    "keywords": "Extension API"
  },
  "api/extensions/StardustDL.AspNet.IdentityServer.Data.html": {
    "href": "api/extensions/StardustDL.AspNet.IdentityServer.Data.html",
    "title": "Namespace StardustDL.AspNet.IdentityServer.Data | Delights",
    "keywords": "Namespace StardustDL.AspNet.IdentityServer.Data Classes IdentityDbContext"
  },
  "api/extensions/StardustDL.AspNet.IdentityServer.Data.IdentityDbContext.html": {
    "href": "api/extensions/StardustDL.AspNet.IdentityServer.Data.IdentityDbContext.html",
    "title": "Class IdentityDbContext | Delights",
    "keywords": "Class IdentityDbContext Inheritance System.Object Microsoft.EntityFrameworkCore.DbContext Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserContext < ApplicationUser , System.String , Microsoft.AspNetCore.Identity.IdentityUserClaim < System.String >, Microsoft.AspNetCore.Identity.IdentityUserLogin < System.String >, Microsoft.AspNetCore.Identity.IdentityUserToken < System.String >> Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext < ApplicationUser , Microsoft.AspNetCore.Identity.IdentityRole , System.String , Microsoft.AspNetCore.Identity.IdentityUserClaim < System.String >, Microsoft.AspNetCore.Identity.IdentityUserRole < System.String >, Microsoft.AspNetCore.Identity.IdentityUserLogin < System.String >, Microsoft.AspNetCore.Identity.IdentityRoleClaim < System.String >, Microsoft.AspNetCore.Identity.IdentityUserToken < System.String >> Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext < ApplicationUser , Microsoft.AspNetCore.Identity.IdentityRole , System.String > Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext < ApplicationUser > Microsoft.AspNetCore.ApiAuthorization.IdentityServer.ApiAuthorizationDbContext < ApplicationUser > IdentityDbContext Implements Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure < System.IServiceProvider > Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies Microsoft.EntityFrameworkCore.Internal.IDbSetCache Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable System.IAsyncDisposable Microsoft.EntityFrameworkCore.Infrastructure.IResettableService IdentityServer4.EntityFramework.Interfaces.IPersistedGrantDbContext System.IDisposable Inherited Members Microsoft.AspNetCore.ApiAuthorization.IdentityServer.ApiAuthorizationDbContext<StardustDL.AspNet.IdentityServer.Models.ApplicationUser>.IdentityServer4.EntityFramework.Interfaces.IPersistedGrantDbContext.SaveChangesAsync() Microsoft.AspNetCore.ApiAuthorization.IdentityServer.ApiAuthorizationDbContext<StardustDL.AspNet.IdentityServer.Models.ApplicationUser>.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder) Microsoft.AspNetCore.ApiAuthorization.IdentityServer.ApiAuthorizationDbContext<StardustDL.AspNet.IdentityServer.Models.ApplicationUser>.PersistedGrants Microsoft.AspNetCore.ApiAuthorization.IdentityServer.ApiAuthorizationDbContext<StardustDL.AspNet.IdentityServer.Models.ApplicationUser>.DeviceFlowCodes Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext<StardustDL.AspNet.IdentityServer.Models.ApplicationUser, Microsoft.AspNetCore.Identity.IdentityRole, System.String, Microsoft.AspNetCore.Identity.IdentityUserClaim<System.String>, Microsoft.AspNetCore.Identity.IdentityUserRole<System.String>, Microsoft.AspNetCore.Identity.IdentityUserLogin<System.String>, Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.String>, Microsoft.AspNetCore.Identity.IdentityUserToken<System.String>>.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder) Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext<StardustDL.AspNet.IdentityServer.Models.ApplicationUser, Microsoft.AspNetCore.Identity.IdentityRole, System.String, Microsoft.AspNetCore.Identity.IdentityUserClaim<System.String>, Microsoft.AspNetCore.Identity.IdentityUserRole<System.String>, Microsoft.AspNetCore.Identity.IdentityUserLogin<System.String>, Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.String>, Microsoft.AspNetCore.Identity.IdentityUserToken<System.String>>.UserRoles Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext<StardustDL.AspNet.IdentityServer.Models.ApplicationUser, Microsoft.AspNetCore.Identity.IdentityRole, System.String, Microsoft.AspNetCore.Identity.IdentityUserClaim<System.String>, Microsoft.AspNetCore.Identity.IdentityUserRole<System.String>, Microsoft.AspNetCore.Identity.IdentityUserLogin<System.String>, Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.String>, Microsoft.AspNetCore.Identity.IdentityUserToken<System.String>>.Roles Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext<StardustDL.AspNet.IdentityServer.Models.ApplicationUser, Microsoft.AspNetCore.Identity.IdentityRole, System.String, Microsoft.AspNetCore.Identity.IdentityUserClaim<System.String>, Microsoft.AspNetCore.Identity.IdentityUserRole<System.String>, Microsoft.AspNetCore.Identity.IdentityUserLogin<System.String>, Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.String>, Microsoft.AspNetCore.Identity.IdentityUserToken<System.String>>.RoleClaims Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserContext<StardustDL.AspNet.IdentityServer.Models.ApplicationUser, System.String, Microsoft.AspNetCore.Identity.IdentityUserClaim<System.String>, Microsoft.AspNetCore.Identity.IdentityUserLogin<System.String>, Microsoft.AspNetCore.Identity.IdentityUserToken<System.String>>.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder) Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserContext<StardustDL.AspNet.IdentityServer.Models.ApplicationUser, System.String, Microsoft.AspNetCore.Identity.IdentityUserClaim<System.String>, Microsoft.AspNetCore.Identity.IdentityUserLogin<System.String>, Microsoft.AspNetCore.Identity.IdentityUserToken<System.String>>.Users Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserContext<StardustDL.AspNet.IdentityServer.Models.ApplicationUser, System.String, Microsoft.AspNetCore.Identity.IdentityUserClaim<System.String>, Microsoft.AspNetCore.Identity.IdentityUserLogin<System.String>, Microsoft.AspNetCore.Identity.IdentityUserToken<System.String>>.UserClaims Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserContext<StardustDL.AspNet.IdentityServer.Models.ApplicationUser, System.String, Microsoft.AspNetCore.Identity.IdentityUserClaim<System.String>, Microsoft.AspNetCore.Identity.IdentityUserLogin<System.String>, Microsoft.AspNetCore.Identity.IdentityUserToken<System.String>>.UserLogins Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserContext<StardustDL.AspNet.IdentityServer.Models.ApplicationUser, System.String, Microsoft.AspNetCore.Identity.IdentityUserClaim<System.String>, Microsoft.AspNetCore.Identity.IdentityUserLogin<System.String>, Microsoft.AspNetCore.Identity.IdentityUserToken<System.String>>.UserTokens Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbSetCache.GetOrAddSet(Microsoft.EntityFrameworkCore.Internal.IDbSetSource, System.Type) Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbSetCache.GetOrAddSet(Microsoft.EntityFrameworkCore.Internal.IDbSetSource, System.String, System.Type) Microsoft.EntityFrameworkCore.DbContext.Set<TEntity>() Microsoft.EntityFrameworkCore.DbContext.Set<TEntity>(System.String) Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder) Microsoft.EntityFrameworkCore.DbContext.SaveChanges() Microsoft.EntityFrameworkCore.DbContext.SaveChanges(System.Boolean) Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Threading.CancellationToken) Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Boolean, System.Threading.CancellationToken) Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable.ClearLease() Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable.SetLease(Microsoft.EntityFrameworkCore.Internal.DbContextLease) Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable.SnapshotConfiguration() Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Infrastructure.IResettableService.ResetState() Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Infrastructure.IResettableService.ResetStateAsync(System.Threading.CancellationToken) Microsoft.EntityFrameworkCore.DbContext.Dispose() Microsoft.EntityFrameworkCore.DbContext.DisposeAsync() Microsoft.EntityFrameworkCore.DbContext.Entry<TEntity>(TEntity) Microsoft.EntityFrameworkCore.DbContext.Entry(System.Object) Microsoft.EntityFrameworkCore.DbContext.Add<TEntity>(TEntity) Microsoft.EntityFrameworkCore.DbContext.AddAsync<TEntity>(TEntity, System.Threading.CancellationToken) Microsoft.EntityFrameworkCore.DbContext.Attach<TEntity>(TEntity) Microsoft.EntityFrameworkCore.DbContext.Update<TEntity>(TEntity) Microsoft.EntityFrameworkCore.DbContext.Remove<TEntity>(TEntity) Microsoft.EntityFrameworkCore.DbContext.Add(System.Object) Microsoft.EntityFrameworkCore.DbContext.AddAsync(System.Object, System.Threading.CancellationToken) Microsoft.EntityFrameworkCore.DbContext.Attach(System.Object) Microsoft.EntityFrameworkCore.DbContext.Update(System.Object) Microsoft.EntityFrameworkCore.DbContext.Remove(System.Object) Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Object[]) Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Object[]) Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Object[]) Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Object[]) Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Object[]) Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Collections.Generic.IEnumerable<System.Object>) Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Collections.Generic.IEnumerable<System.Object>, System.Threading.CancellationToken) Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Collections.Generic.IEnumerable<System.Object>) Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Collections.Generic.IEnumerable<System.Object>) Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Collections.Generic.IEnumerable<System.Object>) Microsoft.EntityFrameworkCore.DbContext.Find(System.Type, System.Object[]) Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type, System.Object[]) Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type, System.Object[], System.Threading.CancellationToken) Microsoft.EntityFrameworkCore.DbContext.Find<TEntity>(System.Object[]) Microsoft.EntityFrameworkCore.DbContext.FindAsync<TEntity>(System.Object[]) Microsoft.EntityFrameworkCore.DbContext.FindAsync<TEntity>(System.Object[], System.Threading.CancellationToken) Microsoft.EntityFrameworkCore.DbContext.FromExpression<TResult>(System.Linq.Expressions.Expression<System.Func<System.Linq.IQueryable<TResult>>>) Microsoft.EntityFrameworkCore.DbContext.Database Microsoft.EntityFrameworkCore.DbContext.ChangeTracker Microsoft.EntityFrameworkCore.DbContext.Model Microsoft.EntityFrameworkCore.DbContext.ContextId Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.SetSource Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.EntityFinderFactory Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.QueryProvider Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.StateManager Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.ChangeDetector Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.EntityGraphAttacher Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.UpdateLogger Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.InfrastructureLogger Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<System.IServiceProvider>.Instance Microsoft.EntityFrameworkCore.DbContext.SavingChanges Microsoft.EntityFrameworkCore.DbContext.SavedChanges Microsoft.EntityFrameworkCore.DbContext.SaveChangesFailed System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StardustDL.AspNet.IdentityServer.Data Assembly : StardustDL.AspNet.IdentityServer.dll Syntax public class IdentityDbContext : ApiAuthorizationDbContext<ApplicationUser>, IInfrastructure<IServiceProvider>, IDbContextDependencies, IDbSetCache, IDbContextPoolable, IAsyncDisposable, IResettableService, IPersistedGrantDbContext, IDisposable Constructors IdentityDbContext(DbContextOptions<IdentityDbContext>, IOptions<OperationalStoreOptions>) Declaration public IdentityDbContext(DbContextOptions<IdentityDbContext> options, IOptions<OperationalStoreOptions> operationalStoreOptions) Parameters Type Name Description Microsoft.EntityFrameworkCore.DbContextOptions < IdentityDbContext > options Microsoft.Extensions.Options.IOptions < IdentityServer4.EntityFramework.Options.OperationalStoreOptions > operationalStoreOptions Implements Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<T> Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies Microsoft.EntityFrameworkCore.Internal.IDbSetCache Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable System.IAsyncDisposable Microsoft.EntityFrameworkCore.Infrastructure.IResettableService IdentityServer4.EntityFramework.Interfaces.IPersistedGrantDbContext System.IDisposable"
  },
  "api/extensions/StardustDL.AspNet.IdentityServer.html": {
    "href": "api/extensions/StardustDL.AspNet.IdentityServer.html",
    "title": "Namespace StardustDL.AspNet.IdentityServer | Delights",
    "keywords": "Namespace StardustDL.AspNet.IdentityServer Classes IdentityServerGraphQLModule IdentityServerGraphQLModuleOption IdentityServerGraphQLModuleService IdentityServerModule ModuleExtensions ModuleQuery"
  },
  "api/extensions/StardustDL.AspNet.IdentityServer.IdentityServerGraphQLModule.html": {
    "href": "api/extensions/StardustDL.AspNet.IdentityServer.IdentityServerGraphQLModule.html",
    "title": "Class IdentityServerGraphQLModule | Delights",
    "keywords": "Class IdentityServerGraphQLModule Inheritance System.Object Module < IdentityServerGraphQLModuleService > Module < IdentityServerGraphQLModuleService , IdentityServerGraphQLModuleOption > GraphQLServerModule < IdentityServerGraphQLModuleService , IdentityServerGraphQLModuleOption > IdentityServerGraphQLModule Implements IModule < IdentityServerGraphQLModuleService , IdentityServerGraphQLModuleOption > IModule < IdentityServerGraphQLModuleService > IGraphQLServerModule IModule Inherited Members GraphQLServerModule<IdentityServerGraphQLModuleService, IdentityServerGraphQLModuleOption>.QueryType GraphQLServerModule<IdentityServerGraphQLModuleService, IdentityServerGraphQLModuleOption>.MutationType GraphQLServerModule<IdentityServerGraphQLModuleService, IdentityServerGraphQLModuleOption>.SubscriptionType GraphQLServerModule<IdentityServerGraphQLModuleService, IdentityServerGraphQLModuleOption>.SetupOptions(Action<IdentityServerGraphQLModuleOption>) GraphQLServerModule<IdentityServerGraphQLModuleService, IdentityServerGraphQLModuleOption>.RegisterGraphQLService(IServiceCollection) GraphQLServerModule<IdentityServerGraphQLModuleService, IdentityServerGraphQLModuleOption>.RegisterService(IServiceCollection) GraphQLServerModule<IdentityServerGraphQLModuleService, IdentityServerGraphQLModuleOption>.MapEndpoint(IEndpointRouteBuilder, IServiceProvider) Module<IdentityServerGraphQLModuleService, IdentityServerGraphQLModuleOption>.OptionConfigurations Module<IdentityServerGraphQLModuleService, IdentityServerGraphQLModuleOption>.OptionsSetup Module<IdentityServerGraphQLModuleService, IdentityServerGraphQLModuleOption>.GetSetupOptions(IdentityServerGraphQLModuleOption) Module<IdentityServerGraphQLModuleService, IdentityServerGraphQLModuleOption>.RegisterOptions(IServiceCollection) Module<IdentityServerGraphQLModuleService, IdentityServerGraphQLModuleOption>.ConfigureOptions(Action<IdentityServerGraphQLModuleOption, IServiceProvider>) Module<IdentityServerGraphQLModuleService, IdentityServerGraphQLModuleOption>.GetOption(IServiceProvider) Module<IdentityServerGraphQLModuleService>.Manifest Module<IdentityServerGraphQLModuleService>.RegisterService(IServiceCollection) Module<IdentityServerGraphQLModuleService>.GetService(IServiceProvider) Module<IdentityServerGraphQLModuleService>.IModule.GetService(IServiceProvider) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StardustDL.AspNet.IdentityServer Assembly : StardustDL.AspNet.IdentityServer.dll Syntax public class IdentityServerGraphQLModule : GraphQLServerModule<IdentityServerGraphQLModuleService, IdentityServerGraphQLModuleOption>, IModule<IdentityServerGraphQLModuleService, IdentityServerGraphQLModuleOption>, IModule<IdentityServerGraphQLModuleService>, IGraphQLServerModule, IModule Constructors IdentityServerGraphQLModule() Declaration public IdentityServerGraphQLModule() Properties QueryType Declaration public override Type QueryType { get; } Property Value Type Description System.Type Overrides Modulight.Modules.Server.GraphQL.GraphQLServerModule<StardustDL.AspNet.IdentityServer.IdentityServerGraphQLModuleService, StardustDL.AspNet.IdentityServer.IdentityServerGraphQLModuleOption>.QueryType Methods MapEndpoint(IEndpointRouteBuilder, IServiceProvider) Declaration public override GraphQLEndpointConventionBuilder MapEndpoint(IEndpointRouteBuilder builder, IServiceProvider provider) Parameters Type Name Description Microsoft.AspNetCore.Routing.IEndpointRouteBuilder builder System.IServiceProvider provider Returns Type Description HotChocolate.AspNetCore.Extensions.GraphQLEndpointConventionBuilder Overrides Modulight.Modules.Server.GraphQL.GraphQLServerModule<StardustDL.AspNet.IdentityServer.IdentityServerGraphQLModuleService, StardustDL.AspNet.IdentityServer.IdentityServerGraphQLModuleOption>.MapEndpoint(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder, System.IServiceProvider) Setup(IModuleHostBuilder) Declaration public override void Setup(IModuleHostBuilder host) Parameters Type Name Description IModuleHostBuilder host Overrides Modulight.Modules.Module<StardustDL.AspNet.IdentityServer.IdentityServerGraphQLModuleService>.Setup(Modulight.Modules.IModuleHostBuilder) Implements IModule<TService, TOption> IModule<TService> IGraphQLServerModule IModule"
  },
  "api/extensions/StardustDL.AspNet.IdentityServer.IdentityServerGraphQLModuleOption.html": {
    "href": "api/extensions/StardustDL.AspNet.IdentityServer.IdentityServerGraphQLModuleOption.html",
    "title": "Class IdentityServerGraphQLModuleOption | Delights",
    "keywords": "Class IdentityServerGraphQLModuleOption Inheritance System.Object GraphQLServerModuleOption IdentityServerGraphQLModuleOption Implements IGraphQLServerModuleOption Inherited Members GraphQLServerModuleOption.SchemaName GraphQLServerModuleOption.Endpoint System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StardustDL.AspNet.IdentityServer Assembly : StardustDL.AspNet.IdentityServer.dll Syntax public class IdentityServerGraphQLModuleOption : GraphQLServerModuleOption, IGraphQLServerModuleOption Implements IGraphQLServerModuleOption"
  },
  "api/extensions/StardustDL.AspNet.IdentityServer.IdentityServerGraphQLModuleService.html": {
    "href": "api/extensions/StardustDL.AspNet.IdentityServer.IdentityServerGraphQLModuleService.html",
    "title": "Class IdentityServerGraphQLModuleService | Delights",
    "keywords": "Class IdentityServerGraphQLModuleService Inheritance System.Object IdentityServerGraphQLModuleService Implements IModuleService Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StardustDL.AspNet.IdentityServer Assembly : StardustDL.AspNet.IdentityServer.dll Syntax public class IdentityServerGraphQLModuleService : IModuleService Implements IModuleService"
  },
  "api/extensions/StardustDL.AspNet.IdentityServer.IdentityServerModule.html": {
    "href": "api/extensions/StardustDL.AspNet.IdentityServer.IdentityServerModule.html",
    "title": "Class IdentityServerModule | Delights",
    "keywords": "Class IdentityServerModule Inheritance System.Object Module < IdentityServerService > Module < IdentityServerService , IdentityServerModuleOption > AspNetServerModule < IdentityServerService , IdentityServerModuleOption > IdentityServerModule Implements IModule < IdentityServerService , IdentityServerModuleOption > IModule < IdentityServerService > IAspNetServerModule IModule Inherited Members AspNetServerModule<IdentityServerService, IdentityServerModuleOption>.MapEndpoint(IEndpointRouteBuilder, IServiceProvider) AspNetServerModule<IdentityServerService, IdentityServerModuleOption>.UseMiddleware(IApplicationBuilder, IServiceProvider) AspNetServerModule<IdentityServerService, IdentityServerModuleOption>.RegisterAspNetServices(IServiceCollection) AspNetServerModule<IdentityServerService, IdentityServerModuleOption>.RegisterService(IServiceCollection) Module<IdentityServerService, IdentityServerModuleOption>.OptionConfigurations Module<IdentityServerService, IdentityServerModuleOption>.OptionsSetup Module<IdentityServerService, IdentityServerModuleOption>.GetSetupOptions(IdentityServerModuleOption) Module<IdentityServerService, IdentityServerModuleOption>.RegisterOptions(IServiceCollection) Module<IdentityServerService, IdentityServerModuleOption>.RegisterService(IServiceCollection) Module<IdentityServerService, IdentityServerModuleOption>.SetupOptions(Action<IdentityServerModuleOption>) Module<IdentityServerService, IdentityServerModuleOption>.ConfigureOptions(Action<IdentityServerModuleOption, IServiceProvider>) Module<IdentityServerService, IdentityServerModuleOption>.GetOption(IServiceProvider) Module<IdentityServerService>.Manifest Module<IdentityServerService>.RegisterService(IServiceCollection) Module<IdentityServerService>.Setup(IModuleHostBuilder) Module<IdentityServerService>.GetService(IServiceProvider) Module<IdentityServerService>.IModule.GetService(IServiceProvider) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StardustDL.AspNet.IdentityServer Assembly : StardustDL.AspNet.IdentityServer.dll Syntax public class IdentityServerModule : AspNetServerModule<IdentityServerService, IdentityServerModuleOption>, IModule<IdentityServerService, IdentityServerModuleOption>, IModule<IdentityServerService>, IAspNetServerModule, IModule Constructors IdentityServerModule() Declaration public IdentityServerModule() Methods RegisterAspNetServices(IServiceCollection) Declaration public override void RegisterAspNetServices(IServiceCollection services) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services Overrides Modulight.Modules.Server.AspNet.AspNetServerModule<IdentityServerService, IdentityServerModuleOption>.RegisterAspNetServices(Microsoft.Extensions.DependencyInjection.IServiceCollection) Implements IModule<TService, TOption> IModule<TService> IAspNetServerModule IModule"
  },
  "api/extensions/StardustDL.AspNet.IdentityServer.Models.ApplicationUser.html": {
    "href": "api/extensions/StardustDL.AspNet.IdentityServer.Models.ApplicationUser.html",
    "title": "Class ApplicationUser | Delights",
    "keywords": "Class ApplicationUser Inheritance System.Object Microsoft.AspNetCore.Identity.IdentityUser < System.String > Microsoft.AspNetCore.Identity.IdentityUser ApplicationUser Inherited Members Microsoft.AspNetCore.Identity.IdentityUser<System.String>.ToString() Microsoft.AspNetCore.Identity.IdentityUser<System.String>.Id Microsoft.AspNetCore.Identity.IdentityUser<System.String>.UserName Microsoft.AspNetCore.Identity.IdentityUser<System.String>.NormalizedUserName Microsoft.AspNetCore.Identity.IdentityUser<System.String>.Email Microsoft.AspNetCore.Identity.IdentityUser<System.String>.NormalizedEmail Microsoft.AspNetCore.Identity.IdentityUser<System.String>.EmailConfirmed Microsoft.AspNetCore.Identity.IdentityUser<System.String>.PasswordHash Microsoft.AspNetCore.Identity.IdentityUser<System.String>.SecurityStamp Microsoft.AspNetCore.Identity.IdentityUser<System.String>.ConcurrencyStamp Microsoft.AspNetCore.Identity.IdentityUser<System.String>.PhoneNumber Microsoft.AspNetCore.Identity.IdentityUser<System.String>.PhoneNumberConfirmed Microsoft.AspNetCore.Identity.IdentityUser<System.String>.TwoFactorEnabled Microsoft.AspNetCore.Identity.IdentityUser<System.String>.LockoutEnd Microsoft.AspNetCore.Identity.IdentityUser<System.String>.LockoutEnabled Microsoft.AspNetCore.Identity.IdentityUser<System.String>.AccessFailedCount System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : StardustDL.AspNet.IdentityServer.Models Assembly : StardustDL.AspNet.IdentityServer.dll Syntax public class ApplicationUser : IdentityUser"
  },
  "api/extensions/StardustDL.AspNet.IdentityServer.Models.html": {
    "href": "api/extensions/StardustDL.AspNet.IdentityServer.Models.html",
    "title": "Namespace StardustDL.AspNet.IdentityServer.Models | Delights",
    "keywords": "Namespace StardustDL.AspNet.IdentityServer.Models Classes ApplicationUser"
  },
  "api/extensions/StardustDL.AspNet.IdentityServer.ModuleExtensions.html": {
    "href": "api/extensions/StardustDL.AspNet.IdentityServer.ModuleExtensions.html",
    "title": "Class ModuleExtensions | Delights",
    "keywords": "Class ModuleExtensions Inheritance System.Object ModuleExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StardustDL.AspNet.IdentityServer Assembly : StardustDL.AspNet.IdentityServer.dll Syntax public static class ModuleExtensions Methods AddIdentityServerGraphQLModule(IModuleHostBuilder, Action<IdentityServerGraphQLModuleOption>, Action<IdentityServerGraphQLModuleOption, IServiceProvider>) Declaration public static IModuleHostBuilder AddIdentityServerGraphQLModule(this IModuleHostBuilder modules, Action<IdentityServerGraphQLModuleOption> setupOptions = null, Action<IdentityServerGraphQLModuleOption, IServiceProvider> configureOptions = null) Parameters Type Name Description IModuleHostBuilder modules System.Action < IdentityServerGraphQLModuleOption > setupOptions System.Action < IdentityServerGraphQLModuleOption , System.IServiceProvider > configureOptions Returns Type Description IModuleHostBuilder AddIdentityServerModule(IModuleHostBuilder, Action<IdentityServerModuleOption>, Action<IdentityServerModuleOption, IServiceProvider>) Declaration public static IModuleHostBuilder AddIdentityServerModule(this IModuleHostBuilder modules, Action<IdentityServerModuleOption> setupOptions = null, Action<IdentityServerModuleOption, IServiceProvider> configureOptions = null) Parameters Type Name Description IModuleHostBuilder modules System.Action < IdentityServerModuleOption > setupOptions System.Action < IdentityServerModuleOption , System.IServiceProvider > configureOptions Returns Type Description IModuleHostBuilder"
  },
  "api/extensions/StardustDL.AspNet.IdentityServer.ModuleQuery.html": {
    "href": "api/extensions/StardustDL.AspNet.IdentityServer.ModuleQuery.html",
    "title": "Class ModuleQuery | Delights",
    "keywords": "Class ModuleQuery Inheritance System.Object ModuleQuery Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StardustDL.AspNet.IdentityServer Assembly : StardustDL.AspNet.IdentityServer.dll Syntax public class ModuleQuery Methods GetToken(String, String, IdentityServerService) Declaration public Task<string> GetToken(string userName, string password, [Service] IdentityServerService service) Parameters Type Name Description System.String userName System.String password IdentityServerService service Returns Type Description System.Threading.Tasks.Task < System.String > GetUid(IdentityServerService) Declaration public Task<string> GetUid([Service] IdentityServerService service) Parameters Type Name Description IdentityServerService service Returns Type Description System.Threading.Tasks.Task < System.String >"
  },
  "api/extensions/StardustDL.AspNet.ObjectStorage.BucketService.html": {
    "href": "api/extensions/StardustDL.AspNet.ObjectStorage.BucketService.html",
    "title": "Class BucketService | Delights",
    "keywords": "Class BucketService Inheritance System.Object BucketService Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StardustDL.AspNet.ObjectStorage Assembly : StardustDL.AspNet.ObjectStorage.dll Syntax public class BucketService Properties Name Declaration public string Name { get; } Property Value Type Description System.String Methods Exists(CancellationToken) Declaration public Task<bool> Exists(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Boolean > Make(CancellationToken) Declaration public Task Make(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task Object(String) Declaration public ObjectService Object(string name) Parameters Type Name Description System.String name Returns Type Description ObjectService Remove(CancellationToken) Declaration public Task Remove(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task"
  },
  "api/extensions/StardustDL.AspNet.ObjectStorage.html": {
    "href": "api/extensions/StardustDL.AspNet.ObjectStorage.html",
    "title": "Namespace StardustDL.AspNet.ObjectStorage | Delights",
    "keywords": "Namespace StardustDL.AspNet.ObjectStorage Classes BucketService ModuleExtensions ObjectService ObjectStorageApiModule ObjectStorageApiModuleOption ObjectStorageApiService ObjectStorageController ObjectStorageModule ObjectStorageModuleOption ObjectStorageService"
  },
  "api/extensions/StardustDL.AspNet.ObjectStorage.ModuleExtensions.html": {
    "href": "api/extensions/StardustDL.AspNet.ObjectStorage.ModuleExtensions.html",
    "title": "Class ModuleExtensions | Delights",
    "keywords": "Class ModuleExtensions Inheritance System.Object ModuleExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StardustDL.AspNet.ObjectStorage Assembly : StardustDL.AspNet.ObjectStorage.dll Syntax public static class ModuleExtensions Methods AddObjectStorageApiModule(IModuleHostBuilder, Action<ObjectStorageApiModuleOption>, Action<ObjectStorageApiModuleOption, IServiceProvider>) Declaration public static IModuleHostBuilder AddObjectStorageApiModule(this IModuleHostBuilder modules, Action<ObjectStorageApiModuleOption> setupOptions = null, Action<ObjectStorageApiModuleOption, IServiceProvider> configureOptions = null) Parameters Type Name Description IModuleHostBuilder modules System.Action < ObjectStorageApiModuleOption > setupOptions System.Action < ObjectStorageApiModuleOption , System.IServiceProvider > configureOptions Returns Type Description IModuleHostBuilder AddObjectStorageModule(IModuleHostBuilder, Action<ObjectStorageModuleOption>, Action<ObjectStorageModuleOption, IServiceProvider>) Declaration public static IModuleHostBuilder AddObjectStorageModule(this IModuleHostBuilder modules, Action<ObjectStorageModuleOption> setupOptions = null, Action<ObjectStorageModuleOption, IServiceProvider> configureOptions = null) Parameters Type Name Description IModuleHostBuilder modules System.Action < ObjectStorageModuleOption > setupOptions System.Action < ObjectStorageModuleOption , System.IServiceProvider > configureOptions Returns Type Description IModuleHostBuilder"
  },
  "api/extensions/StardustDL.AspNet.ObjectStorage.ObjectService.html": {
    "href": "api/extensions/StardustDL.AspNet.ObjectStorage.ObjectService.html",
    "title": "Class ObjectService | Delights",
    "keywords": "Class ObjectService Inheritance System.Object ObjectService Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StardustDL.AspNet.ObjectStorage Assembly : StardustDL.AspNet.ObjectStorage.dll Syntax public class ObjectService Properties ContentType Declaration public string ContentType { get; } Property Value Type Description System.String Info Declaration public record Info { } Property Value Type Description record LastModified Declaration public DateTime LastModified { get; } Property Value Type Description System.DateTime Metadata Declaration public IReadOnlyDictionary<string, string> Metadata { get; } Property Value Type Description System.Collections.Generic.IReadOnlyDictionary < System.String , System.String > Size Declaration public long Size { get; } Property Value Type Description System.Int64"
  },
  "api/extensions/StardustDL.AspNet.ObjectStorage.ObjectStorageApiModule.html": {
    "href": "api/extensions/StardustDL.AspNet.ObjectStorage.ObjectStorageApiModule.html",
    "title": "Class ObjectStorageApiModule | Delights",
    "keywords": "Class ObjectStorageApiModule Inheritance System.Object Module < ObjectStorageApiService > Module < ObjectStorageApiService , ObjectStorageApiModuleOption > AspNetServerModule < ObjectStorageApiService , ObjectStorageApiModuleOption > ObjectStorageApiModule Implements IModule < ObjectStorageApiService , ObjectStorageApiModuleOption > IModule < ObjectStorageApiService > IAspNetServerModule IModule Inherited Members AspNetServerModule<ObjectStorageApiService, ObjectStorageApiModuleOption>.MapEndpoint(IEndpointRouteBuilder, IServiceProvider) AspNetServerModule<ObjectStorageApiService, ObjectStorageApiModuleOption>.UseMiddleware(IApplicationBuilder, IServiceProvider) AspNetServerModule<ObjectStorageApiService, ObjectStorageApiModuleOption>.RegisterAspNetServices(IServiceCollection) AspNetServerModule<ObjectStorageApiService, ObjectStorageApiModuleOption>.RegisterService(IServiceCollection) Module<ObjectStorageApiService, ObjectStorageApiModuleOption>.OptionConfigurations Module<ObjectStorageApiService, ObjectStorageApiModuleOption>.OptionsSetup Module<ObjectStorageApiService, ObjectStorageApiModuleOption>.GetSetupOptions(ObjectStorageApiModuleOption) Module<ObjectStorageApiService, ObjectStorageApiModuleOption>.RegisterOptions(IServiceCollection) Module<ObjectStorageApiService, ObjectStorageApiModuleOption>.SetupOptions(Action<ObjectStorageApiModuleOption>) Module<ObjectStorageApiService, ObjectStorageApiModuleOption>.ConfigureOptions(Action<ObjectStorageApiModuleOption, IServiceProvider>) Module<ObjectStorageApiService, ObjectStorageApiModuleOption>.GetOption(IServiceProvider) Module<ObjectStorageApiService>.Manifest Module<ObjectStorageApiService>.RegisterService(IServiceCollection) Module<ObjectStorageApiService>.GetService(IServiceProvider) Module<ObjectStorageApiService>.IModule.GetService(IServiceProvider) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StardustDL.AspNet.ObjectStorage Assembly : StardustDL.AspNet.ObjectStorage.dll Syntax public class ObjectStorageApiModule : AspNetServerModule<ObjectStorageApiService, ObjectStorageApiModuleOption>, IModule<ObjectStorageApiService, ObjectStorageApiModuleOption>, IModule<ObjectStorageApiService>, IAspNetServerModule, IModule Constructors ObjectStorageApiModule() Declaration public ObjectStorageApiModule() Methods RegisterAspNetServices(IServiceCollection) Declaration public override void RegisterAspNetServices(IServiceCollection services) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services Overrides Modulight.Modules.Server.AspNet.AspNetServerModule<StardustDL.AspNet.ObjectStorage.ObjectStorageApiService, StardustDL.AspNet.ObjectStorage.ObjectStorageApiModuleOption>.RegisterAspNetServices(Microsoft.Extensions.DependencyInjection.IServiceCollection) Setup(IModuleHostBuilder) Declaration public override void Setup(IModuleHostBuilder host) Parameters Type Name Description IModuleHostBuilder host Overrides Modulight.Modules.Module<StardustDL.AspNet.ObjectStorage.ObjectStorageApiService>.Setup(Modulight.Modules.IModuleHostBuilder) Implements IModule<TService, TOption> IModule<TService> IAspNetServerModule IModule"
  },
  "api/extensions/StardustDL.AspNet.ObjectStorage.ObjectStorageApiModuleOption.html": {
    "href": "api/extensions/StardustDL.AspNet.ObjectStorage.ObjectStorageApiModuleOption.html",
    "title": "Class ObjectStorageApiModuleOption | Delights",
    "keywords": "Class ObjectStorageApiModuleOption Inheritance System.Object ObjectStorageApiModuleOption Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StardustDL.AspNet.ObjectStorage Assembly : StardustDL.AspNet.ObjectStorage.dll Syntax public class ObjectStorageApiModuleOption Properties AllowGet Declaration public bool AllowGet { get; set; } Property Value Type Description System.Boolean AllowPut Declaration public bool AllowPut { get; set; } Property Value Type Description System.Boolean"
  },
  "api/extensions/StardustDL.AspNet.ObjectStorage.ObjectStorageApiService.html": {
    "href": "api/extensions/StardustDL.AspNet.ObjectStorage.ObjectStorageApiService.html",
    "title": "Class ObjectStorageApiService | Delights",
    "keywords": "Class ObjectStorageApiService Inheritance System.Object ObjectStorageApiService Implements IModuleService Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StardustDL.AspNet.ObjectStorage Assembly : StardustDL.AspNet.ObjectStorage.dll Syntax public class ObjectStorageApiService : IModuleService Methods GetObjectUrl(String, String) Declaration public string GetObjectUrl(string bucketName, string objectName) Parameters Type Name Description System.String bucketName System.String objectName Returns Type Description System.String Implements IModuleService"
  },
  "api/extensions/StardustDL.AspNet.ObjectStorage.ObjectStorageController.html": {
    "href": "api/extensions/StardustDL.AspNet.ObjectStorage.ObjectStorageController.html",
    "title": "Class ObjectStorageController | Delights",
    "keywords": "Class ObjectStorageController Inheritance System.Object Microsoft.AspNetCore.Mvc.ControllerBase ObjectStorageController Inherited Members Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32) Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, System.String, System.Text.Encoding) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, Microsoft.Net.Http.Headers.MediaTypeHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.NoContent() Microsoft.AspNetCore.Mvc.ControllerBase.Ok() Microsoft.AspNetCore.Mvc.ControllerBase.Ok(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Redirect(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirect(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction() Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanentPreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized() Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.NotFound() Microsoft.AspNetCore.Mvc.ControllerBase.NotFound(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest() Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity() Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.Conflict() Microsoft.AspNetCore.Mvc.ControllerBase.Conflict(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Conflict(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.Problem(System.String, System.String, System.Nullable<System.Int32>, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(Microsoft.AspNetCore.Mvc.ValidationProblemDetails) Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem() Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(System.String, System.String, System.Nullable<System.Int32>, System.String, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.Uri, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted() Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge() Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid() Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut() Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object, System.Type, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object, System.Type, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.HttpContext Microsoft.AspNetCore.Mvc.ControllerBase.Request Microsoft.AspNetCore.Mvc.ControllerBase.Response Microsoft.AspNetCore.Mvc.ControllerBase.RouteData Microsoft.AspNetCore.Mvc.ControllerBase.ModelState Microsoft.AspNetCore.Mvc.ControllerBase.ControllerContext Microsoft.AspNetCore.Mvc.ControllerBase.MetadataProvider Microsoft.AspNetCore.Mvc.ControllerBase.ModelBinderFactory Microsoft.AspNetCore.Mvc.ControllerBase.Url Microsoft.AspNetCore.Mvc.ControllerBase.ObjectValidator Microsoft.AspNetCore.Mvc.ControllerBase.ProblemDetailsFactory Microsoft.AspNetCore.Mvc.ControllerBase.User System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StardustDL.AspNet.ObjectStorage Assembly : StardustDL.AspNet.ObjectStorage.dll Syntax [Area(\"ObjectStorageApiModule\")] [Route(\"/ObjectStorageApiModule\")] [ApiController] public class ObjectStorageController : ControllerBase Constructors ObjectStorageController(ObjectStorageService, IOptions<ObjectStorageApiModuleOption>) Declaration public ObjectStorageController(ObjectStorageService service, IOptions<ObjectStorageApiModuleOption> options) Parameters Type Name Description ObjectStorageService service Microsoft.Extensions.Options.IOptions < ObjectStorageApiModuleOption > options Properties Options Declaration public ObjectStorageApiModuleOption Options { get; } Property Value Type Description ObjectStorageApiModuleOption Service Declaration public ObjectStorageService Service { get; } Property Value Type Description ObjectStorageService Methods Get(String, String) Declaration [HttpGet(\"{bucketName}/{objectName}\")] public Task<ActionResult> Get(string bucketName, string objectName) Parameters Type Name Description System.String bucketName System.String objectName Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.ActionResult > Put(String, String, IFormFile) Declaration [HttpPut(\"{bucketName}/{objectName}\")] public Task<ActionResult> Put(string bucketName, string objectName, IFormFile file) Parameters Type Name Description System.String bucketName System.String objectName Microsoft.AspNetCore.Http.IFormFile file Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.ActionResult >"
  },
  "api/extensions/StardustDL.AspNet.ObjectStorage.ObjectStorageModule.html": {
    "href": "api/extensions/StardustDL.AspNet.ObjectStorage.ObjectStorageModule.html",
    "title": "Class ObjectStorageModule | Delights",
    "keywords": "Class ObjectStorageModule Inheritance System.Object Module < ObjectStorageService > Module < ObjectStorageService , ObjectStorageModuleOption > ObjectStorageModule Implements IModule < ObjectStorageService , ObjectStorageModuleOption > IModule < ObjectStorageService > IModule Inherited Members Module<ObjectStorageService, ObjectStorageModuleOption>.OptionConfigurations Module<ObjectStorageService, ObjectStorageModuleOption>.OptionsSetup Module<ObjectStorageService, ObjectStorageModuleOption>.GetSetupOptions(ObjectStorageModuleOption) Module<ObjectStorageService, ObjectStorageModuleOption>.RegisterOptions(IServiceCollection) Module<ObjectStorageService, ObjectStorageModuleOption>.RegisterService(IServiceCollection) Module<ObjectStorageService, ObjectStorageModuleOption>.SetupOptions(Action<ObjectStorageModuleOption>) Module<ObjectStorageService, ObjectStorageModuleOption>.ConfigureOptions(Action<ObjectStorageModuleOption, IServiceProvider>) Module<ObjectStorageService, ObjectStorageModuleOption>.GetOption(IServiceProvider) Module<ObjectStorageService>.Manifest Module<ObjectStorageService>.RegisterService(IServiceCollection) Module<ObjectStorageService>.Setup(IModuleHostBuilder) Module<ObjectStorageService>.GetService(IServiceProvider) Module<ObjectStorageService>.IModule.GetService(IServiceProvider) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StardustDL.AspNet.ObjectStorage Assembly : StardustDL.AspNet.ObjectStorage.dll Syntax public class ObjectStorageModule : Module<ObjectStorageService, ObjectStorageModuleOption>, IModule<ObjectStorageService, ObjectStorageModuleOption>, IModule<ObjectStorageService>, IModule Constructors ObjectStorageModule() Declaration public ObjectStorageModule() Implements IModule<TService, TOption> IModule<TService> IModule"
  },
  "api/extensions/StardustDL.AspNet.ObjectStorage.ObjectStorageModuleOption.html": {
    "href": "api/extensions/StardustDL.AspNet.ObjectStorage.ObjectStorageModuleOption.html",
    "title": "Class ObjectStorageModuleOption | Delights",
    "keywords": "Class ObjectStorageModuleOption Inheritance System.Object ObjectStorageModuleOption Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StardustDL.AspNet.ObjectStorage Assembly : StardustDL.AspNet.ObjectStorage.dll Syntax public class ObjectStorageModuleOption Properties AccessKey Declaration public string AccessKey { get; set; } Property Value Type Description System.String Endpoint Declaration public string Endpoint { get; set; } Property Value Type Description System.String SecretKey Declaration public string SecretKey { get; set; } Property Value Type Description System.String Ssl Declaration public bool Ssl { get; set; } Property Value Type Description System.Boolean"
  },
  "api/extensions/StardustDL.AspNet.ObjectStorage.ObjectStorageService.html": {
    "href": "api/extensions/StardustDL.AspNet.ObjectStorage.ObjectStorageService.html",
    "title": "Class ObjectStorageService | Delights",
    "keywords": "Class ObjectStorageService Inheritance System.Object ObjectStorageService Implements IModuleService Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : StardustDL.AspNet.ObjectStorage Assembly : StardustDL.AspNet.ObjectStorage.dll Syntax public class ObjectStorageService : IModuleService Constructors ObjectStorageService(IOptions<ObjectStorageModuleOption>) Declaration public ObjectStorageService(IOptions<ObjectStorageModuleOption> options) Parameters Type Name Description Microsoft.Extensions.Options.IOptions < ObjectStorageModuleOption > options Properties Options Declaration public ObjectStorageModuleOption Options { get; } Property Value Type Description ObjectStorageModuleOption Methods Bucket(String) Declaration public BucketService Bucket(string bucketName) Parameters Type Name Description System.String bucketName Returns Type Description BucketService Implements IModuleService"
  },
  "api/modulight/index.html": {
    "href": "api/modulight/index.html",
    "title": "Modulight | Delights",
    "keywords": "Modulight Modulight is a light modular framework aimed to be low intrusive based on dependency injection for .NET 5, ASP.NET Core and Blazor. Features Dependency injection Unified services registering Client (Blazor) Unified CSS & JS lazy loading & prerendering. No need to append <script> and <link> repeatedly for every razor components, especially when use different hosting models. Unified assembly lazy loading. Interop between modules and host. Server (GraphQL cooperated with ChilliCream GraphQL Platform ) Unified query/mutation/subscription definition Builtin module options support It provides a place to unify resources, and it can be used to make Razor component library easy to use and manage. The user needn't to take care of related services and <script> or <link> tags in index.html . Usage Use modules Create a ModuleHostBuilder and register modules. For Razor component modules: var builder = ModuleHostBuilder.CreateDefaultBuilder() .UseRazorComponentClientModules() .AddModule<FooModule>(); For GraphQL server modules: var builder = ModuleHostBuilder.CreateDefaultBuilder() .UseAspNetServerModules().UseGraphQLServerModules() .AddModule<FooModule>(); Use the builder to register services. // in Startup: void ConfigureServices(IServiceCollection services) builder.Build(services); Additional step for GraphQL server modules: // in Startup: void Configure(IApplicationBuilder app, IWebHostEnvironment env) app.UseAspNetServerModuleMiddlewares(); app.UseEndpoints(endpoints => { // modules mapper endpoints.MapAspNetServerModuleEndpoints(); endpoints.MapGraphQLServerModuleEndpoints(postMapEndpoint: (module, builder) => { builder.RequireCors(cors => { cors.AllowAnyOrigin().AllowAnyHeader().AllowAnyMethod(); }); }); // other mapper, eg: endpoints.MapControllers(); }); For razor components, add ResourceDeclare component to App.razor to load UI resources. <Modulight.Modules.Client.RazorComponents.UI.ResourceDeclare /> This component will find all resources defined in modules, and render HTML tags for them. This works for normal cases, but if you use WebAssembly target, no prerenderring, and the component library need the javascript files to be loaded initially. You can use the following codes to load resources manually. // WebAssemblyHostBuilder builder; await using(var provider = builder.Services.BuildServiceProvider()) { await provider.GetRazorComponentClientModuleHost().LoadResources(); } await builder.Build().RunAsync(); Example codes They are based on nightly build package at: https://sparkshine.pkgs.visualstudio.com/StardustDL/_packaging/feed/nuget/v3/index.json Design a client (Blazor) module HelloModule.cs Client module definition. Index.razor Client module pages. It belongs to a different assembly from which Module belongs to because we want this assembly is lazy loading. Design a GraphQL server module HelloServerModule.cs GraphQL server module definition. Use a client module in Blazor websites ModulePage.razor Layout and container for module pages. App.razor Lazy loading for js/css/sassemblies when routing. UIModule.cs Definition of JS/CSS resources. ModuleSetup.cs Use modules in client. Startup.cs Blazor Server hosting. Program.cs Blazor WebAssembly hosting. index.html Clean index.html. Use a GraphQL server module Startup.cs GraphQL server integrating."
  },
  "api/modulight/Modulight.Modules.Client.RazorComponents.html": {
    "href": "api/modulight/Modulight.Modules.Client.RazorComponents.html",
    "title": "Namespace Modulight.Modules.Client.RazorComponents | Delights",
    "keywords": "Namespace Modulight.Modules.Client.RazorComponents Classes RazorComponentClientModule<TUIService, TOption, TUI> Basic implement for IRazorComponentClientModule<TUIService, TOption, TUI> . RazorComponentClientModuleExtensions Extension methods for razor component modules. Interfaces IRazorComponentClientModule Specifies the contract for razor component modules. IRazorComponentClientModule<TUIService, TOption, TUI> Specifies the contract for razor component modules with typed services. IRazorComponentClientModuleHost Specifies the contract for razor component module hosts."
  },
  "api/modulight/Modulight.Modules.Client.RazorComponents.IRazorComponentClientModule.html": {
    "href": "api/modulight/Modulight.Modules.Client.RazorComponents.IRazorComponentClientModule.html",
    "title": "Interface IRazorComponentClientModule | Delights",
    "keywords": "Interface IRazorComponentClientModule Specifies the contract for razor component modules. Inherited Members IModule.Manifest IModule.RegisterService(IServiceCollection) IModule.GetService(IServiceProvider) IModule.Setup(IModuleHostBuilder) Namespace : Modulight.Modules.Client.RazorComponents Assembly : Modulight.Modules.Client.RazorComponents.dll Syntax public interface IRazorComponentClientModule : IModule Methods GetUI(IServiceProvider) Get module UI from service provider. Declaration IModuleUI GetUI(IServiceProvider provider) Parameters Type Name Description System.IServiceProvider provider Returns Type Description IModuleUI GetUIService(IServiceProvider) Get module UI service from service provider. Declaration IModuleService GetUIService(IServiceProvider provider) Parameters Type Name Description System.IServiceProvider provider Returns Type Description IModuleService RegisterUI(IServiceCollection) Register module UI. Declaration void RegisterUI(IServiceCollection services) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services RegisterUIService(IServiceCollection) Register module UI related services. Declaration void RegisterUIService(IServiceCollection services) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services"
  },
  "api/modulight/Modulight.Modules.Client.RazorComponents.IRazorComponentClientModule-3.html": {
    "href": "api/modulight/Modulight.Modules.Client.RazorComponents.IRazorComponentClientModule-3.html",
    "title": "Interface IRazorComponentClientModule<TUIService, TOption, TUI> | Delights",
    "keywords": "Interface IRazorComponentClientModule<TUIService, TOption, TUI> Specifies the contract for razor component modules with typed services. Inherited Members IModule<TUIService, TOption>.RegisterOptions(IServiceCollection) IModule<TUIService, TOption>.SetupOptions(Action<TOption>) IModule<TUIService, TOption>.ConfigureOptions(Action<TOption, IServiceProvider>) IModule<TUIService, TOption>.GetOption(IServiceProvider) IModule<TUIService>.GetService(IServiceProvider) IRazorComponentClientModule.RegisterUI(IServiceCollection) IRazorComponentClientModule.RegisterUIService(IServiceCollection) IModule.Manifest IModule.RegisterService(IServiceCollection) IModule.Setup(IModuleHostBuilder) Namespace : Modulight.Modules.Client.RazorComponents Assembly : Modulight.Modules.Client.RazorComponents.dll Syntax public interface IRazorComponentClientModule<out TUIService, out TOption, out TUI> : IModule<TUIService, TOption>, IModule<TUIService>, IRazorComponentClientModule, IModule where TUIService : IModuleService where TUI : IModuleUI Type Parameters Name Description TUIService TOption TUI Methods GetUI(IServiceProvider) Get typed module UI from service provider. Declaration TUI GetUI(IServiceProvider provider) Parameters Type Name Description System.IServiceProvider provider Returns Type Description TUI GetUIService(IServiceProvider) Get typed module UI service from service provider. Declaration TUIService GetUIService(IServiceProvider provider) Parameters Type Name Description System.IServiceProvider provider Returns Type Description TUIService"
  },
  "api/modulight/Modulight.Modules.Client.RazorComponents.IRazorComponentClientModuleHost.html": {
    "href": "api/modulight/Modulight.Modules.Client.RazorComponents.IRazorComponentClientModuleHost.html",
    "title": "Interface IRazorComponentClientModuleHost | Delights",
    "keywords": "Interface IRazorComponentClientModuleHost Specifies the contract for razor component module hosts. Namespace : Modulight.Modules.Client.RazorComponents Assembly : Modulight.Modules.Client.RazorComponents.dll Syntax public interface IRazorComponentClientModuleHost : IModuleHost Properties Modules Get all registered modules. Declaration IReadOnlyList<IRazorComponentClientModule> Modules { get; } Property Value Type Description System.Collections.Generic.IReadOnlyList < IRazorComponentClientModule > Methods GetAssembliesForRouting(String, Boolean, Boolean, CancellationToken) Load related assemblies for a given route. Declaration Task<List<Assembly>> GetAssembliesForRouting(string path, bool recurse = false, bool throwOnError = false, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.String path Route path. System.Boolean recurse Load dependent assemblies recursely. System.Boolean throwOnError Throw exceptions when error occurs instead of logs. System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < System.Reflection.Assembly >> LoadResources() Load all UIResource defined in modules into DOM. Declaration Task LoadResources() Returns Type Description System.Threading.Tasks.Task Validate() Validate modules. Check if route roots conflict or assembly loading fails. Declaration Task Validate() Returns Type Description System.Threading.Tasks.Task"
  },
  "api/modulight/Modulight.Modules.Client.RazorComponents.RazorComponentClientModule-3.html": {
    "href": "api/modulight/Modulight.Modules.Client.RazorComponents.RazorComponentClientModule-3.html",
    "title": "Class RazorComponentClientModule<TUIService, TOption, TUI> | Delights",
    "keywords": "Class RazorComponentClientModule<TUIService, TOption, TUI> Basic implement for IRazorComponentClientModule<TUIService, TOption, TUI> . Inheritance System.Object Module <TUIService> Module <TUIService, TOption> RazorComponentClientModule<TUIService, TOption, TUI> Implements IRazorComponentClientModule <TUIService, TOption, TUI> IModule <TUIService, TOption> IModule <TUIService> IRazorComponentClientModule IModule Inherited Members Module<TUIService, TOption>.OptionConfigurations Module<TUIService, TOption>.OptionsSetup Module<TUIService, TOption>.GetSetupOptions(TOption) Module<TUIService, TOption>.RegisterOptions(IServiceCollection) Module<TUIService, TOption>.RegisterService(IServiceCollection) Module<TUIService, TOption>.SetupOptions(Action<TOption>) Module<TUIService, TOption>.ConfigureOptions(Action<TOption, IServiceProvider>) Module<TUIService, TOption>.GetOption(IServiceProvider) Module<TUIService>.Manifest Module<TUIService>.Setup(IModuleHostBuilder) Module<TUIService>.GetService(IServiceProvider) Module<TUIService>.IModule.GetService(IServiceProvider) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Modulight.Modules.Client.RazorComponents Assembly : Modulight.Modules.Client.RazorComponents.dll Syntax public abstract class RazorComponentClientModule<TUIService, TOption, TUI> : Module<TUIService, TOption>, IRazorComponentClientModule<TUIService, TOption, TUI>, IModule<TUIService, TOption>, IModule<TUIService>, IRazorComponentClientModule, IModule where TUIService : class, IModuleService where TOption : class, new() where TUI : class, IModuleUI Type Parameters Name Description TUIService TOption TUI Constructors RazorComponentClientModule(Nullable<ModuleManifest>) Declaration protected RazorComponentClientModule(ModuleManifest? manifest = default(ModuleManifest? )) Parameters Type Name Description System.Nullable < ModuleManifest > manifest Methods GetUI(IServiceProvider) Get typed module UI from service provider. Declaration public TUI GetUI(IServiceProvider provider) Parameters Type Name Description System.IServiceProvider provider Returns Type Description TUI GetUIService(IServiceProvider) Get typed module UI service from service provider. Declaration public TUIService GetUIService(IServiceProvider provider) Parameters Type Name Description System.IServiceProvider provider Returns Type Description TUIService RegisterService(IServiceCollection) Auto-register TService as scoped service. Declaration public override void RegisterService(IServiceCollection services) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services Service collection Overrides Modulight.Modules.Module<TUIService, TOption>.RegisterService(Microsoft.Extensions.DependencyInjection.IServiceCollection) RegisterUI(IServiceCollection) Auto-register TUI as scoped service. Declaration public virtual void RegisterUI(IServiceCollection services) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services RegisterUIService(IServiceCollection) Auto-register TUIService as scoped service. Declaration public virtual void RegisterUIService(IServiceCollection services) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services Explicit Interface Implementations IRazorComponentClientModule.GetUI(IServiceProvider) Declaration IModuleUI IRazorComponentClientModule.GetUI(IServiceProvider provider) Parameters Type Name Description System.IServiceProvider provider Returns Type Description IModuleUI IRazorComponentClientModule.GetUIService(IServiceProvider) Declaration IModuleService IRazorComponentClientModule.GetUIService(IServiceProvider provider) Parameters Type Name Description System.IServiceProvider provider Returns Type Description IModuleService Implements IRazorComponentClientModule<TUIService, TOption, TUI> IModule<TService, TOption> IModule<TService> IRazorComponentClientModule IModule"
  },
  "api/modulight/Modulight.Modules.Client.RazorComponents.RazorComponentClientModuleExtensions.html": {
    "href": "api/modulight/Modulight.Modules.Client.RazorComponents.RazorComponentClientModuleExtensions.html",
    "title": "Class RazorComponentClientModuleExtensions | Delights",
    "keywords": "Class RazorComponentClientModuleExtensions Extension methods for razor component modules. Inheritance System.Object RazorComponentClientModuleExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Modulight.Modules.Client.RazorComponents Assembly : Modulight.Modules.Client.RazorComponents.dll Syntax public static class RazorComponentClientModuleExtensions Methods GetRazorComponentClientModuleHost(IServiceProvider) Get razor component module host from service provider. Declaration public static IRazorComponentClientModuleHost GetRazorComponentClientModuleHost(this IServiceProvider provider) Parameters Type Name Description System.IServiceProvider provider Returns Type Description IRazorComponentClientModuleHost UseRazorComponentClientModules(IModuleHostBuilder) Use building middlewares for razor component modules. It will register IRazorComponentClientModuleHost service. Declaration public static IModuleHostBuilder UseRazorComponentClientModules(this IModuleHostBuilder modules) Parameters Type Name Description IModuleHostBuilder modules Returns Type Description IModuleHostBuilder"
  },
  "api/modulight/Modulight.Modules.Client.RazorComponents.UI.BasePage.html": {
    "href": "api/modulight/Modulight.Modules.Client.RazorComponents.UI.BasePage.html",
    "title": "Class BasePage | Delights",
    "keywords": "Class BasePage Base class for module UI pages. Inheritance System.Object Microsoft.AspNetCore.Components.ComponentBase BasePage BasePage<TModule> Implements Microsoft.AspNetCore.Components.IComponent Microsoft.AspNetCore.Components.IHandleEvent Microsoft.AspNetCore.Components.IHandleAfterRender Inherited Members Microsoft.AspNetCore.Components.ComponentBase.BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder) Microsoft.AspNetCore.Components.ComponentBase.OnInitializedAsync() Microsoft.AspNetCore.Components.ComponentBase.OnParametersSet() Microsoft.AspNetCore.Components.ComponentBase.OnParametersSetAsync() Microsoft.AspNetCore.Components.ComponentBase.StateHasChanged() Microsoft.AspNetCore.Components.ComponentBase.ShouldRender() Microsoft.AspNetCore.Components.ComponentBase.OnAfterRender(System.Boolean) Microsoft.AspNetCore.Components.ComponentBase.OnAfterRenderAsync(System.Boolean) Microsoft.AspNetCore.Components.ComponentBase.InvokeAsync(System.Action) Microsoft.AspNetCore.Components.ComponentBase.InvokeAsync(System.Func<System.Threading.Tasks.Task>) Microsoft.AspNetCore.Components.ComponentBase.Microsoft.AspNetCore.Components.IComponent.Attach(Microsoft.AspNetCore.Components.RenderHandle) Microsoft.AspNetCore.Components.ComponentBase.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView) Microsoft.AspNetCore.Components.ComponentBase.Microsoft.AspNetCore.Components.IHandleEvent.HandleEventAsync(Microsoft.AspNetCore.Components.EventCallbackWorkItem, System.Object) Microsoft.AspNetCore.Components.ComponentBase.Microsoft.AspNetCore.Components.IHandleAfterRender.OnAfterRenderAsync() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Modulight.Modules.Client.RazorComponents.UI Assembly : Modulight.Modules.Client.RazorComponents.dll Syntax public abstract class BasePage : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Properties Parent Get instance. Declaration [CascadingParameter] protected PageParent Parent { get; set; } Property Value Type Description PageParent Methods GetModule() Get current page's module. Declaration public abstract IRazorComponentClientModule GetModule() Returns Type Description IRazorComponentClientModule OnInitialized() Declaration protected override void OnInitialized() Overrides Microsoft.AspNetCore.Components.ComponentBase.OnInitialized() Implements Microsoft.AspNetCore.Components.IComponent Microsoft.AspNetCore.Components.IHandleEvent Microsoft.AspNetCore.Components.IHandleAfterRender"
  },
  "api/modulight/Modulight.Modules.Client.RazorComponents.UI.BasePage-1.html": {
    "href": "api/modulight/Modulight.Modules.Client.RazorComponents.UI.BasePage-1.html",
    "title": "Class BasePage<TModule> | Delights",
    "keywords": "Class BasePage<TModule> Base class for module UI pages with typed module. Inheritance System.Object Microsoft.AspNetCore.Components.ComponentBase BasePage BasePage<TModule> Implements Microsoft.AspNetCore.Components.IComponent Microsoft.AspNetCore.Components.IHandleEvent Microsoft.AspNetCore.Components.IHandleAfterRender Inherited Members BasePage.Parent BasePage.OnInitialized() Microsoft.AspNetCore.Components.ComponentBase.BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder) Microsoft.AspNetCore.Components.ComponentBase.OnInitializedAsync() Microsoft.AspNetCore.Components.ComponentBase.OnParametersSet() Microsoft.AspNetCore.Components.ComponentBase.OnParametersSetAsync() Microsoft.AspNetCore.Components.ComponentBase.StateHasChanged() Microsoft.AspNetCore.Components.ComponentBase.ShouldRender() Microsoft.AspNetCore.Components.ComponentBase.OnAfterRender(System.Boolean) Microsoft.AspNetCore.Components.ComponentBase.OnAfterRenderAsync(System.Boolean) Microsoft.AspNetCore.Components.ComponentBase.InvokeAsync(System.Action) Microsoft.AspNetCore.Components.ComponentBase.InvokeAsync(System.Func<System.Threading.Tasks.Task>) Microsoft.AspNetCore.Components.ComponentBase.Microsoft.AspNetCore.Components.IComponent.Attach(Microsoft.AspNetCore.Components.RenderHandle) Microsoft.AspNetCore.Components.ComponentBase.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView) Microsoft.AspNetCore.Components.ComponentBase.Microsoft.AspNetCore.Components.IHandleEvent.HandleEventAsync(Microsoft.AspNetCore.Components.EventCallbackWorkItem, System.Object) Microsoft.AspNetCore.Components.ComponentBase.Microsoft.AspNetCore.Components.IHandleAfterRender.OnAfterRenderAsync() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Modulight.Modules.Client.RazorComponents.UI Assembly : Modulight.Modules.Client.RazorComponents.dll Syntax public abstract class BasePage<TModule> : BasePage, IComponent, IHandleEvent, IHandleAfterRender where TModule : IRazorComponentClientModule Type Parameters Name Description TModule Properties Module Get current page's typed module. Declaration [Inject] public TModule Module { get; set; } Property Value Type Description TModule Methods GetModule() Get current page's module. Declaration public override IRazorComponentClientModule GetModule() Returns Type Description IRazorComponentClientModule Overrides BasePage.GetModule() Implements Microsoft.AspNetCore.Components.IComponent Microsoft.AspNetCore.Components.IHandleEvent Microsoft.AspNetCore.Components.IHandleAfterRender"
  },
  "api/modulight/Modulight.Modules.Client.RazorComponents.UI.html": {
    "href": "api/modulight/Modulight.Modules.Client.RazorComponents.UI.html",
    "title": "Namespace Modulight.Modules.Client.RazorComponents.UI | Delights",
    "keywords": "Namespace Modulight.Modules.Client.RazorComponents.UI Classes BasePage Base class for module UI pages. BasePage<TModule> Base class for module UI pages with typed module. ModuleUI Basic implement for IModuleUI . PageParentBase Container for module pages. Provide page services to interop with host UI. PageTitle A razor component to set module page title for . UIResource Defines UI resourcecs. Interfaces IModuleUI Specifies the contract for razor component module UI. Enums UIResourceType UI Resource type."
  },
  "api/modulight/Modulight.Modules.Client.RazorComponents.UI.IModuleUI.html": {
    "href": "api/modulight/Modulight.Modules.Client.RazorComponents.UI.IModuleUI.html",
    "title": "Interface IModuleUI | Delights",
    "keywords": "Interface IModuleUI Specifies the contract for razor component module UI. Namespace : Modulight.Modules.Client.RazorComponents.UI Assembly : Modulight.Modules.Client.RazorComponents.dll Syntax public interface IModuleUI Properties Icon Get module icon. Declaration RenderFragment Icon { get; } Property Value Type Description Microsoft.AspNetCore.Components.RenderFragment Resources Get module UI resources. Declaration UIResource[] Resources { get; } Property Value Type Description UIResource [] RootPath Get module UI route root path, such as home, search, and so on. Use System.String.Empty for no page module. Declaration string RootPath { get; } Property Value Type Description System.String Methods Contains(String) Check if a path is belongs to this module UI. Declaration bool Contains(string path) Parameters Type Name Description System.String path Route path. Returns Type Description System.Boolean"
  },
  "api/modulight/Modulight.Modules.Client.RazorComponents.UI.ModuleUI.html": {
    "href": "api/modulight/Modulight.Modules.Client.RazorComponents.UI.ModuleUI.html",
    "title": "Class ModuleUI | Delights",
    "keywords": "Class ModuleUI Basic implement for IModuleUI . Inheritance System.Object ModuleUI Implements System.IDisposable System.IAsyncDisposable IModuleUI Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Modulight.Modules.Client.RazorComponents.UI Assembly : Modulight.Modules.Client.RazorComponents.dll Syntax public abstract class ModuleUI : IDisposable, IAsyncDisposable, IModuleUI Constructors ModuleUI(IJSRuntime, ILogger<ModuleUI>, String) Create a module UI instance. Declaration public ModuleUI(IJSRuntime jsRuntime, ILogger<ModuleUI> logger, string rootPath = \"\") Parameters Type Name Description Microsoft.JSInterop.IJSRuntime jsRuntime Microsoft.Extensions.Logging.ILogger < ModuleUI > logger System.String rootPath UI route root path. Properties Icon Get module icon. Declaration public virtual RenderFragment Icon { get; } Property Value Type Description Microsoft.AspNetCore.Components.RenderFragment JSRuntime JS runtime. Declaration protected IJSRuntime JSRuntime { get; } Property Value Type Description Microsoft.JSInterop.IJSRuntime Resources Get module UI resources. Declaration public UIResource[] Resources { get; protected set; } Property Value Type Description UIResource [] RootPath Get module UI route root path, such as home, search, and so on. Use System.String.Empty for no page module. Declaration public string RootPath { get; } Property Value Type Description System.String Methods Contains(String) Check if a path is belongs to this module UI. Declaration public virtual bool Contains(string path) Parameters Type Name Description System.String path Route path. Returns Type Description System.Boolean Dispose() Declaration public void Dispose() Dispose(Boolean) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description System.Boolean disposing DisposeAsync() Declaration public ValueTask DisposeAsync() Returns Type Description System.Threading.Tasks.ValueTask DisposeAsyncCore() Declaration protected virtual ValueTask DisposeAsyncCore() Returns Type Description System.Threading.Tasks.ValueTask GetEntryJSModule() Get default javascript module with default name \"module.js\". Declaration protected virtual Task<IJSObjectReference> GetEntryJSModule() Returns Type Description System.Threading.Tasks.Task < Microsoft.JSInterop.IJSObjectReference > GetJSModule(String, String) Get a lazy javascript module at /_content/{ assemblyName }/{ jsPath }. Declaration protected Task<IJSObjectReference> GetJSModule(string jsPath, string assemblyName = null) Parameters Type Name Description System.String jsPath Javascript file path. System.String assemblyName Assembly name, null for the assembly which current module defined. Returns Type Description System.Threading.Tasks.Task < Microsoft.JSInterop.IJSObjectReference > Implements System.IDisposable System.IAsyncDisposable IModuleUI"
  },
  "api/modulight/Modulight.Modules.Client.RazorComponents.UI.PageParentBase.html": {
    "href": "api/modulight/Modulight.Modules.Client.RazorComponents.UI.PageParentBase.html",
    "title": "Class PageParentBase | Delights",
    "keywords": "Class PageParentBase Container for module pages. Provide page services to interop with host UI. Inheritance System.Object Microsoft.AspNetCore.Components.ComponentBase PageParentBase Implements Microsoft.AspNetCore.Components.IComponent Microsoft.AspNetCore.Components.IHandleEvent Microsoft.AspNetCore.Components.IHandleAfterRender Inherited Members Microsoft.AspNetCore.Components.ComponentBase.BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder) Microsoft.AspNetCore.Components.ComponentBase.OnInitialized() Microsoft.AspNetCore.Components.ComponentBase.OnInitializedAsync() Microsoft.AspNetCore.Components.ComponentBase.OnParametersSet() Microsoft.AspNetCore.Components.ComponentBase.OnParametersSetAsync() Microsoft.AspNetCore.Components.ComponentBase.StateHasChanged() Microsoft.AspNetCore.Components.ComponentBase.ShouldRender() Microsoft.AspNetCore.Components.ComponentBase.OnAfterRender(System.Boolean) Microsoft.AspNetCore.Components.ComponentBase.OnAfterRenderAsync(System.Boolean) Microsoft.AspNetCore.Components.ComponentBase.InvokeAsync(System.Action) Microsoft.AspNetCore.Components.ComponentBase.InvokeAsync(System.Func<System.Threading.Tasks.Task>) Microsoft.AspNetCore.Components.ComponentBase.Microsoft.AspNetCore.Components.IComponent.Attach(Microsoft.AspNetCore.Components.RenderHandle) Microsoft.AspNetCore.Components.ComponentBase.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView) Microsoft.AspNetCore.Components.ComponentBase.Microsoft.AspNetCore.Components.IHandleEvent.HandleEventAsync(Microsoft.AspNetCore.Components.EventCallbackWorkItem, System.Object) Microsoft.AspNetCore.Components.ComponentBase.Microsoft.AspNetCore.Components.IHandleAfterRender.OnAfterRenderAsync() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Modulight.Modules.Client.RazorComponents.UI Assembly : Modulight.Modules.Client.RazorComponents.dll Syntax public abstract class PageParentBase : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Properties Module Get or set current module. Declaration public IRazorComponentClientModule Module { get; set; } Property Value Type Description IRazorComponentClientModule Title Get or set page title. Declaration public string Title { get; set; } Property Value Type Description System.String Implements Microsoft.AspNetCore.Components.IComponent Microsoft.AspNetCore.Components.IHandleEvent Microsoft.AspNetCore.Components.IHandleAfterRender"
  },
  "api/modulight/Modulight.Modules.Client.RazorComponents.UI.PageTitle.html": {
    "href": "api/modulight/Modulight.Modules.Client.RazorComponents.UI.PageTitle.html",
    "title": "Class PageTitle | Delights",
    "keywords": "Class PageTitle A razor component to set module page title for . Inheritance System.Object Microsoft.AspNetCore.Components.ComponentBase PageTitle Implements Microsoft.AspNetCore.Components.IComponent Microsoft.AspNetCore.Components.IHandleEvent Microsoft.AspNetCore.Components.IHandleAfterRender Inherited Members Microsoft.AspNetCore.Components.ComponentBase.BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder) Microsoft.AspNetCore.Components.ComponentBase.OnInitialized() Microsoft.AspNetCore.Components.ComponentBase.OnInitializedAsync() Microsoft.AspNetCore.Components.ComponentBase.OnParametersSetAsync() Microsoft.AspNetCore.Components.ComponentBase.StateHasChanged() Microsoft.AspNetCore.Components.ComponentBase.ShouldRender() Microsoft.AspNetCore.Components.ComponentBase.OnAfterRender(System.Boolean) Microsoft.AspNetCore.Components.ComponentBase.OnAfterRenderAsync(System.Boolean) Microsoft.AspNetCore.Components.ComponentBase.InvokeAsync(System.Action) Microsoft.AspNetCore.Components.ComponentBase.InvokeAsync(System.Func<System.Threading.Tasks.Task>) Microsoft.AspNetCore.Components.ComponentBase.Microsoft.AspNetCore.Components.IComponent.Attach(Microsoft.AspNetCore.Components.RenderHandle) Microsoft.AspNetCore.Components.ComponentBase.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView) Microsoft.AspNetCore.Components.ComponentBase.Microsoft.AspNetCore.Components.IHandleEvent.HandleEventAsync(Microsoft.AspNetCore.Components.EventCallbackWorkItem, System.Object) Microsoft.AspNetCore.Components.ComponentBase.Microsoft.AspNetCore.Components.IHandleAfterRender.OnAfterRenderAsync() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Modulight.Modules.Client.RazorComponents.UI Assembly : Modulight.Modules.Client.RazorComponents.dll Syntax public class PageTitle : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Properties Parent Get instance. Declaration [CascadingParameter] protected PageParent Parent { get; set; } Property Value Type Description PageParent Value Set current title value. Declaration [Parameter] public string Value { get; set; } Property Value Type Description System.String Methods OnParametersSet() Declaration protected override void OnParametersSet() Overrides Microsoft.AspNetCore.Components.ComponentBase.OnParametersSet() Implements Microsoft.AspNetCore.Components.IComponent Microsoft.AspNetCore.Components.IHandleEvent Microsoft.AspNetCore.Components.IHandleAfterRender"
  },
  "api/modulight/Modulight.Modules.Client.RazorComponents.UI.UIResource.html": {
    "href": "api/modulight/Modulight.Modules.Client.RazorComponents.UI.UIResource.html",
    "title": "Class UIResource | Delights",
    "keywords": "Class UIResource Defines UI resourcecs. Inheritance System.Object UIResource Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Modulight.Modules.Client.RazorComponents.UI Assembly : Modulight.Modules.Client.RazorComponents.dll Syntax public class UIResource Constructors UIResource(UIResourceType, String) Create a UI resource definition. Declaration public UIResource(UIResourceType type, string path) Parameters Type Name Description UIResourceType type Resource type. System.String path Resource relative path. Properties Path Resource relative path. Declaration public string Path { get; set; } Property Value Type Description System.String Type Resource type. Declaration public UIResourceType Type { get; set; } Property Value Type Description UIResourceType"
  },
  "api/modulight/Modulight.Modules.Client.RazorComponents.UI.UIResourceType.html": {
    "href": "api/modulight/Modulight.Modules.Client.RazorComponents.UI.UIResourceType.html",
    "title": "Enum UIResourceType | Delights",
    "keywords": "Enum UIResourceType UI Resource type. Namespace : Modulight.Modules.Client.RazorComponents.UI Assembly : Modulight.Modules.Client.RazorComponents.dll Syntax public enum UIResourceType Fields Name Description Script Javascript StyleSheet Style sheet"
  },
  "api/modulight/Modulight.Modules.DefaultModuleHostBuilder.html": {
    "href": "api/modulight/Modulight.Modules.DefaultModuleHostBuilder.html",
    "title": "Class DefaultModuleHostBuilder | Delights",
    "keywords": "Class DefaultModuleHostBuilder Default implement for IModuleHostBuilder . Inheritance System.Object DefaultModuleHostBuilder Implements IModuleHostBuilder Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Modulight.Modules Assembly : Modulight.Modules.Core.dll Syntax public class DefaultModuleHostBuilder : IModuleHostBuilder Properties Descriptors Module descriptors registered modules. Declaration protected Dictionary<Type, IModule> Descriptors { get; } Property Value Type Description System.Collections.Generic.Dictionary < System.Type , IModule > Middlewares Registered building middlewares. Declaration protected List<(ModuleHostBuilderMiddlewareType, Action<IModuleHostBuilder, IServiceCollection>)> Middlewares { get; } Property Value Type Description System.Collections.Generic.List < System.ValueTuple < ModuleHostBuilderMiddlewareType , System.Action < IModuleHostBuilder , Microsoft.Extensions.DependencyInjection.IServiceCollection >>> Modules Get all registered modules. Declaration public virtual IReadOnlyList<IModule> Modules { get; } Property Value Type Description System.Collections.Generic.IReadOnlyList < IModule > Methods AddModule(Type, IModule) Add module in given type. Declaration public virtual IModuleHostBuilder AddModule(Type type, IModule module) Parameters Type Name Description System.Type type Target module type. IModule module Module instance Returns Type Description IModuleHostBuilder Build(IServiceCollection) Build the modules and the module host in service collection. Declaration public virtual void Build(IServiceCollection services) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services Target service collection. GetModule(Type) Get module in given type. Declaration public virtual IModule GetModule(Type type) Parameters Type Name Description System.Type type Target module type. Returns Type Description IModule Module instance, null when no module in the type. PostBuild(IServiceCollection) Invoked by Build(IServiceCollection) after building. Declaration protected virtual void PostBuild(IServiceCollection services) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services PreBuild(IServiceCollection) Invoked by Build(IServiceCollection) before building. Declaration protected virtual void PreBuild(IServiceCollection services) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services UseMiddleware(ModuleHostBuilderMiddlewareType, Action<IModuleHostBuilder, IServiceCollection>) Use a building middleware. Declaration public IModuleHostBuilder UseMiddleware(ModuleHostBuilderMiddlewareType type, Action<IModuleHostBuilder, IServiceCollection> middleware) Parameters Type Name Description ModuleHostBuilderMiddlewareType type Executing order type. System.Action < IModuleHostBuilder , Microsoft.Extensions.DependencyInjection.IServiceCollection > middleware Middleware. Returns Type Description IModuleHostBuilder Implements IModuleHostBuilder Extension Methods RazorComponentClientModuleExtensions.UseRazorComponentClientModules(IModuleHostBuilder) ModuleHostExtensions.AddModule<T>(IModuleHostBuilder, T) ModuleHostExtensions.AddModule<T>(IModuleHostBuilder) ModuleHostExtensions.AddModule<T, TOption>(IModuleHostBuilder, T, Action<TOption>, Action<TOption, IServiceProvider>) ModuleHostExtensions.AddModule<T, TOption>(IModuleHostBuilder, Action<TOption>, Action<TOption, IServiceProvider>) ModuleHostExtensions.TryAddModule(IModuleHostBuilder, Type, Func<IModule>) ModuleHostExtensions.TryAddModule<T>(IModuleHostBuilder, Func<T>) ModuleHostExtensions.TryAddModule<T>(IModuleHostBuilder) ModuleHostExtensions.TryAddModule<T, TOption>(IModuleHostBuilder, Func<T>, Action<TOption>, Action<TOption, IServiceProvider>) ModuleHostExtensions.TryAddModule<T, TOption>(IModuleHostBuilder, Action<TOption>, Action<TOption, IServiceProvider>) ModuleHostExtensions.UsePreMiddleware(IModuleHostBuilder, Action<IModuleHostBuilder, IServiceCollection>) ModuleHostExtensions.UsePostMiddleware(IModuleHostBuilder, Action<IModuleHostBuilder, IServiceCollection>) AspNetServerModuleExtensions.UseAspNetServerModules(IModuleHostBuilder) GraphQLServerModuleExtensions.UseGraphQLServerModules(IModuleHostBuilder)"
  },
  "api/modulight/Modulight.Modules.html": {
    "href": "api/modulight/Modulight.Modules.html",
    "title": "Namespace Modulight.Modules | Delights",
    "keywords": "Namespace Modulight.Modules Classes DefaultModuleHostBuilder Default implement for IModuleHostBuilder . Module<TService> Basic implement for IModule<TService> . Module<TService, TOption> Basic implement for IModule<TService, TOption> . ModuleExtensions Extension methods for modules. ModuleHostBuilder Default methods for module host builders. ModuleHostExtensions Extension methods for module hosts. Interfaces IModule Specifies the contract for modules. IModule<TService> Specifies the contract for the modules with typed service. IModule<TService, TOption> Specifies the contract for the modules with typed service and option. IModuleHost Specifies the contract for module hosts. IModuleHostBuilder Specifies the contract for module host builder. Enums ModuleHostBuilderMiddlewareType Executing order for module host builder middlewares."
  },
  "api/modulight/Modulight.Modules.IModule.html": {
    "href": "api/modulight/Modulight.Modules.IModule.html",
    "title": "Interface IModule | Delights",
    "keywords": "Interface IModule Specifies the contract for modules. Namespace : Modulight.Modules Assembly : Modulight.Modules.Core.dll Syntax public interface IModule Properties Manifest Manifest for module. Declaration ModuleManifest Manifest { get; set; } Property Value Type Description ModuleManifest Methods GetService(IServiceProvider) Get module service from service provider. Declaration IModuleService GetService(IServiceProvider provider) Parameters Type Name Description System.IServiceProvider provider Service provider. Returns Type Description IModuleService Module service. RegisterService(IServiceCollection) Register services for module. Declaration void RegisterService(IServiceCollection services) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services Service collection Setup(IModuleHostBuilder) Setup module when it be added to module host. Install other dependent module in this method. Declaration void Setup(IModuleHostBuilder host) Parameters Type Name Description IModuleHostBuilder host Module host."
  },
  "api/modulight/Modulight.Modules.IModule-1.html": {
    "href": "api/modulight/Modulight.Modules.IModule-1.html",
    "title": "Interface IModule<TService> | Delights",
    "keywords": "Interface IModule<TService> Specifies the contract for the modules with typed service. Inherited Members IModule.Manifest IModule.RegisterService(IServiceCollection) IModule.Setup(IModuleHostBuilder) Namespace : Modulight.Modules Assembly : Modulight.Modules.Core.dll Syntax public interface IModule<out TService> : IModule where TService : IModuleService Type Parameters Name Description TService Service type. Methods GetService(IServiceProvider) Get module typed service from service provider. Declaration TService GetService(IServiceProvider provider) Parameters Type Name Description System.IServiceProvider provider Service provider. Returns Type Description TService Typed module service."
  },
  "api/modulight/Modulight.Modules.IModule-2.html": {
    "href": "api/modulight/Modulight.Modules.IModule-2.html",
    "title": "Interface IModule<TService, TOption> | Delights",
    "keywords": "Interface IModule<TService, TOption> Specifies the contract for the modules with typed service and option. Inherited Members IModule<TService>.GetService(IServiceProvider) IModule.Manifest IModule.RegisterService(IServiceCollection) IModule.Setup(IModuleHostBuilder) Namespace : Modulight.Modules Assembly : Modulight.Modules.Core.dll Syntax public interface IModule<out TService, out TOption> : IModule<TService>, IModule where TService : IModuleService Type Parameters Name Description TService Service type. TOption Option type. Methods ConfigureOptions(Action<TOption, IServiceProvider>) Configure for options. Actions from this can be used for the module service after building the service provider. Declaration void ConfigureOptions(Action<TOption, IServiceProvider> configureOptions) Parameters Type Name Description System.Action <TOption, System.IServiceProvider > configureOptions Action to configure options. This will be executed after the existed action. GetOption(IServiceProvider) Get module typed option from service provider. Declaration TOption GetOption(IServiceProvider provider) Parameters Type Name Description System.IServiceProvider provider Service provider. Returns Type Description TOption Typed module option. RegisterOptions(IServiceCollection) Register options for module. Declaration void RegisterOptions(IServiceCollection services) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services Service collection SetupOptions(Action<TOption>) Setup for initial options. Action from this can be used for service registering and other methods in module. Declaration void SetupOptions(Action<TOption> setupOptions) Parameters Type Name Description System.Action <TOption> setupOptions Action to setup initial options. This will replace the old setup action."
  },
  "api/modulight/Modulight.Modules.IModuleHost.html": {
    "href": "api/modulight/Modulight.Modules.IModuleHost.html",
    "title": "Interface IModuleHost | Delights",
    "keywords": "Interface IModuleHost Specifies the contract for module hosts. Namespace : Modulight.Modules Assembly : Modulight.Modules.Core.dll Syntax public interface IModuleHost Properties Modules Get all registered modules. Declaration IReadOnlyList<IModule> Modules { get; } Property Value Type Description System.Collections.Generic.IReadOnlyList < IModule >"
  },
  "api/modulight/Modulight.Modules.IModuleHostBuilder.html": {
    "href": "api/modulight/Modulight.Modules.IModuleHostBuilder.html",
    "title": "Interface IModuleHostBuilder | Delights",
    "keywords": "Interface IModuleHostBuilder Specifies the contract for module host builder. Namespace : Modulight.Modules Assembly : Modulight.Modules.Core.dll Syntax public interface IModuleHostBuilder Properties Modules Get all registered modules. Declaration IReadOnlyList<IModule> Modules { get; } Property Value Type Description System.Collections.Generic.IReadOnlyList < IModule > Methods AddModule(Type, IModule) Add module in given type. Declaration IModuleHostBuilder AddModule(Type type, IModule module) Parameters Type Name Description System.Type type Target module type. IModule module Module instance Returns Type Description IModuleHostBuilder Build(IServiceCollection) Build the modules and the module host in service collection. Declaration void Build(IServiceCollection services) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services Target service collection. GetModule(Type) Get module in given type. Declaration IModule GetModule(Type type) Parameters Type Name Description System.Type type Target module type. Returns Type Description IModule Module instance, null when no module in the type. UseMiddleware(ModuleHostBuilderMiddlewareType, Action<IModuleHostBuilder, IServiceCollection>) Use a building middleware. Declaration IModuleHostBuilder UseMiddleware(ModuleHostBuilderMiddlewareType type, Action<IModuleHostBuilder, IServiceCollection> middleware) Parameters Type Name Description ModuleHostBuilderMiddlewareType type Executing order type. System.Action < IModuleHostBuilder , Microsoft.Extensions.DependencyInjection.IServiceCollection > middleware Middleware. Returns Type Description IModuleHostBuilder Extension Methods RazorComponentClientModuleExtensions.UseRazorComponentClientModules(IModuleHostBuilder) ModuleHostExtensions.AddModule<T>(IModuleHostBuilder, T) ModuleHostExtensions.AddModule<T>(IModuleHostBuilder) ModuleHostExtensions.AddModule<T, TOption>(IModuleHostBuilder, T, Action<TOption>, Action<TOption, IServiceProvider>) ModuleHostExtensions.AddModule<T, TOption>(IModuleHostBuilder, Action<TOption>, Action<TOption, IServiceProvider>) ModuleHostExtensions.TryAddModule(IModuleHostBuilder, Type, Func<IModule>) ModuleHostExtensions.TryAddModule<T>(IModuleHostBuilder, Func<T>) ModuleHostExtensions.TryAddModule<T>(IModuleHostBuilder) ModuleHostExtensions.TryAddModule<T, TOption>(IModuleHostBuilder, Func<T>, Action<TOption>, Action<TOption, IServiceProvider>) ModuleHostExtensions.TryAddModule<T, TOption>(IModuleHostBuilder, Action<TOption>, Action<TOption, IServiceProvider>) ModuleHostExtensions.UsePreMiddleware(IModuleHostBuilder, Action<IModuleHostBuilder, IServiceCollection>) ModuleHostExtensions.UsePostMiddleware(IModuleHostBuilder, Action<IModuleHostBuilder, IServiceCollection>) AspNetServerModuleExtensions.UseAspNetServerModules(IModuleHostBuilder) GraphQLServerModuleExtensions.UseGraphQLServerModules(IModuleHostBuilder)"
  },
  "api/modulight/Modulight.Modules.Module-1.html": {
    "href": "api/modulight/Modulight.Modules.Module-1.html",
    "title": "Class Module<TService> | Delights",
    "keywords": "Class Module<TService> Basic implement for IModule<TService> . Inheritance System.Object Module<TService> Module<TService, TOption> Implements IModule <TService> IModule Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Modulight.Modules Assembly : Modulight.Modules.Core.dll Syntax public abstract class Module<TService> : IModule<TService>, IModule where TService : class, IModuleService Type Parameters Name Description TService Service type. Constructors Module(Nullable<ModuleManifest>) Initial module with manifest. Declaration protected Module(ModuleManifest? manifest = default(ModuleManifest? )) Parameters Type Name Description System.Nullable < ModuleManifest > manifest Module manifest. If null, will use defualt manifest generation. Properties Manifest Manifest for module. Declaration public ModuleManifest Manifest { get; set; } Property Value Type Description ModuleManifest Methods GetService(IServiceProvider) Get module typed service from service provider. Declaration public virtual TService GetService(IServiceProvider provider) Parameters Type Name Description System.IServiceProvider provider Service provider. Returns Type Description TService Typed module service. RegisterService(IServiceCollection) Auto-register TService as scoped service. Declaration public virtual void RegisterService(IServiceCollection services) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services Setup(IModuleHostBuilder) Setup module when it be added to module host. Install other dependent module in this method. Declaration public virtual void Setup(IModuleHostBuilder host) Parameters Type Name Description IModuleHostBuilder host Module host. Explicit Interface Implementations IModule.GetService(IServiceProvider) Declaration IModuleService IModule.GetService(IServiceProvider provider) Parameters Type Name Description System.IServiceProvider provider Returns Type Description IModuleService Implements IModule<TService> IModule"
  },
  "api/modulight/Modulight.Modules.Module-2.html": {
    "href": "api/modulight/Modulight.Modules.Module-2.html",
    "title": "Class Module<TService, TOption> | Delights",
    "keywords": "Class Module<TService, TOption> Basic implement for IModule<TService, TOption> . Inheritance System.Object Module <TService> Module<TService, TOption> RazorComponentClientModule<TUIService, TOption, TUI> AspNetServerModule<TService, TOption> GraphQLServerModule<TService, TOption> Implements IModule <TService, TOption> IModule <TService> IModule Inherited Members Module<TService>.Manifest Module<TService>.Setup(IModuleHostBuilder) Module<TService>.GetService(IServiceProvider) Module<TService>.IModule.GetService(IServiceProvider) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Modulight.Modules Assembly : Modulight.Modules.Core.dll Syntax public abstract class Module<TService, TOption> : Module<TService>, IModule<TService, TOption>, IModule<TService>, IModule where TService : class, IModuleService where TOption : class Type Parameters Name Description TService Service type. TOption Option type. Constructors Module(Nullable<ModuleManifest>) Declaration protected Module(ModuleManifest? manifest = default(ModuleManifest? )) Parameters Type Name Description System.Nullable < ModuleManifest > manifest Properties OptionConfigurations Action list for ConfigureOptions(Action<TOption, IServiceProvider>) . Declaration protected IList<Action<TOption, IServiceProvider>> OptionConfigurations { get; } Property Value Type Description System.Collections.Generic.IList < System.Action <TOption, System.IServiceProvider >> OptionsSetup Action for SetupOptions(Action<TOption>) . Declaration protected Action<TOption> OptionsSetup { get; set; } Property Value Type Description System.Action <TOption> Methods ConfigureOptions(Action<TOption, IServiceProvider>) Configure for options. Actions from this can be used for the module service after building the service provider. Declaration public virtual void ConfigureOptions(Action<TOption, IServiceProvider> configureOptions) Parameters Type Name Description System.Action <TOption, System.IServiceProvider > configureOptions Action to configure options. This will be executed after the existed action. GetOption(IServiceProvider) Get module typed option from service provider. Declaration public virtual TOption GetOption(IServiceProvider provider) Parameters Type Name Description System.IServiceProvider provider Service provider. Returns Type Description TOption Typed module option. GetSetupOptions(TOption) Get the options after applying OptionsSetup . Declaration protected TOption GetSetupOptions(TOption initial) Parameters Type Name Description TOption initial Returns Type Description TOption RegisterOptions(IServiceCollection) Register options for module. Declaration public virtual void RegisterOptions(IServiceCollection services) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services Service collection RegisterService(IServiceCollection) Auto-register TService as scoped service. Declaration public override void RegisterService(IServiceCollection services) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services Service collection Overrides Modulight.Modules.Module<TService>.RegisterService(Microsoft.Extensions.DependencyInjection.IServiceCollection) SetupOptions(Action<TOption>) Setup for initial options. Action from this can be used for service registering and other methods in module. Declaration public virtual void SetupOptions(Action<TOption> setupOptions) Parameters Type Name Description System.Action <TOption> setupOptions Action to setup initial options. This will replace the old setup action. Implements IModule<TService, TOption> IModule<TService> IModule"
  },
  "api/modulight/Modulight.Modules.ModuleExtensions.html": {
    "href": "api/modulight/Modulight.Modules.ModuleExtensions.html",
    "title": "Class ModuleExtensions | Delights",
    "keywords": "Class ModuleExtensions Extension methods for modules. Inheritance System.Object ModuleExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Modulight.Modules Assembly : Modulight.Modules.Core.dll Syntax public static class ModuleExtensions Methods AllSpecifyModules<T>(IEnumerable<IModule>) Get all modules in given type. Declaration public static IEnumerable<T> AllSpecifyModules<T>(this IEnumerable<IModule> this) Parameters Type Name Description System.Collections.Generic.IEnumerable < IModule > this Module list. Returns Type Description System.Collections.Generic.IEnumerable <T> Type Parameters Name Description T Target module type. GetAssemblyName(Type) Get assembly name from type. Declaration public static string GetAssemblyName(this Type type) Parameters Type Name Description System.Type type Returns Type Description System.String GetModuleHost(IServiceProvider) Get default module host from service provider. Declaration public static IModuleHost GetModuleHost(this IServiceProvider services) Parameters Type Name Description System.IServiceProvider services Returns Type Description IModuleHost"
  },
  "api/modulight/Modulight.Modules.ModuleHostBuilder.html": {
    "href": "api/modulight/Modulight.Modules.ModuleHostBuilder.html",
    "title": "Class ModuleHostBuilder | Delights",
    "keywords": "Class ModuleHostBuilder Default methods for module host builders. Inheritance System.Object ModuleHostBuilder Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Modulight.Modules Assembly : Modulight.Modules.Core.dll Syntax public static class ModuleHostBuilder Methods CreateDefaultBuilder() Create a defualt module host builder. Declaration public static IModuleHostBuilder CreateDefaultBuilder() Returns Type Description IModuleHostBuilder"
  },
  "api/modulight/Modulight.Modules.ModuleHostBuilderMiddlewareType.html": {
    "href": "api/modulight/Modulight.Modules.ModuleHostBuilderMiddlewareType.html",
    "title": "Enum ModuleHostBuilderMiddlewareType | Delights",
    "keywords": "Enum ModuleHostBuilderMiddlewareType Executing order for module host builder middlewares. Namespace : Modulight.Modules Assembly : Modulight.Modules.Core.dll Syntax public enum ModuleHostBuilderMiddlewareType Fields Name Description Post Execute after building. Pre Execute before building."
  },
  "api/modulight/Modulight.Modules.ModuleHostExtensions.html": {
    "href": "api/modulight/Modulight.Modules.ModuleHostExtensions.html",
    "title": "Class ModuleHostExtensions | Delights",
    "keywords": "Class ModuleHostExtensions Extension methods for module hosts. Inheritance System.Object ModuleHostExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Modulight.Modules Assembly : Modulight.Modules.Core.dll Syntax public static class ModuleHostExtensions Methods AddModule<T>(IModuleHostBuilder) Add a typed module by empty constructor. Declaration public static IModuleHostBuilder AddModule<T>(this IModuleHostBuilder builder) where T : class, IModule, new() Parameters Type Name Description IModuleHostBuilder builder Module host builder. Returns Type Description IModuleHostBuilder Type Parameters Name Description T Module type. AddModule<T>(IModuleHostBuilder, T) Add a typed module. Declaration public static IModuleHostBuilder AddModule<T>(this IModuleHostBuilder builder, T module) where T : class, IModule Parameters Type Name Description IModuleHostBuilder builder Module host builder. T module Module instance. Returns Type Description IModuleHostBuilder Type Parameters Name Description T Module type. AddModule<T, TOption>(IModuleHostBuilder, T, Action<TOption>, Action<TOption, IServiceProvider>) Add a typed module with options. Declaration public static IModuleHostBuilder AddModule<T, TOption>(this IModuleHostBuilder builder, T module, Action<TOption> setupOptions = null, Action<TOption, IServiceProvider> configureOptions = null) where T : class, IModule<IModuleService, TOption> where TOption : class Parameters Type Name Description IModuleHostBuilder builder Module host builder. T module Module instance. System.Action <TOption> setupOptions Action for SetupOptions(Action<TOption>) . System.Action <TOption, System.IServiceProvider > configureOptions Action for ConfigureOptions(Action<TOption, IServiceProvider>) . Returns Type Description IModuleHostBuilder Type Parameters Name Description T Module type. TOption Module option type. AddModule<T, TOption>(IModuleHostBuilder, Action<TOption>, Action<TOption, IServiceProvider>) Add a typed module with options by empty constructor. Declaration public static IModuleHostBuilder AddModule<T, TOption>(this IModuleHostBuilder builder, Action<TOption> setupOptions = null, Action<TOption, IServiceProvider> configureOptions = null) where T : class, IModule<IModuleService, TOption>, new() where TOption : class Parameters Type Name Description IModuleHostBuilder builder Module host builder. System.Action <TOption> setupOptions Action for SetupOptions(Action<TOption>) . System.Action <TOption, System.IServiceProvider > configureOptions Action for ConfigureOptions(Action<TOption, IServiceProvider>) . Returns Type Description IModuleHostBuilder Type Parameters Name Description T Module type. TOption Module option type. TryAddModule(IModuleHostBuilder, Type, Func<IModule>) Try to add a module. Declaration public static IModuleHostBuilder TryAddModule(this IModuleHostBuilder builder, Type type, Func<IModule> module) Parameters Type Name Description IModuleHostBuilder builder Module host builder. System.Type type Module type System.Func < IModule > module Function to get module instance. Returns Type Description IModuleHostBuilder TryAddModule<T>(IModuleHostBuilder) Try to add a typed module by empty constructor. Declaration public static IModuleHostBuilder TryAddModule<T>(this IModuleHostBuilder builder) where T : class, IModule, new() Parameters Type Name Description IModuleHostBuilder builder Module host builder. Returns Type Description IModuleHostBuilder Type Parameters Name Description T Module type. TryAddModule<T>(IModuleHostBuilder, Func<T>) Try to add a typed module. Declaration public static IModuleHostBuilder TryAddModule<T>(this IModuleHostBuilder builder, Func<T> module) where T : class, IModule Parameters Type Name Description IModuleHostBuilder builder Module host builder. System.Func <T> module Function to get module instance. Returns Type Description IModuleHostBuilder Type Parameters Name Description T Module type. TryAddModule<T, TOption>(IModuleHostBuilder, Action<TOption>, Action<TOption, IServiceProvider>) Try to add a typed module with options by empty constructor. Declaration public static IModuleHostBuilder TryAddModule<T, TOption>(this IModuleHostBuilder builder, Action<TOption> setupOptions = null, Action<TOption, IServiceProvider> configureOptions = null) where T : class, IModule<IModuleService, TOption>, new() where TOption : class Parameters Type Name Description IModuleHostBuilder builder Module host builder. System.Action <TOption> setupOptions Action for SetupOptions(Action<TOption>) . System.Action <TOption, System.IServiceProvider > configureOptions Action for ConfigureOptions(Action<TOption, IServiceProvider>) . Returns Type Description IModuleHostBuilder Type Parameters Name Description T Module type. TOption Module option type. TryAddModule<T, TOption>(IModuleHostBuilder, Func<T>, Action<TOption>, Action<TOption, IServiceProvider>) Try to add a typed module with options. Declaration public static IModuleHostBuilder TryAddModule<T, TOption>(this IModuleHostBuilder builder, Func<T> module, Action<TOption> setupOptions = null, Action<TOption, IServiceProvider> configureOptions = null) where T : class, IModule<IModuleService, TOption> where TOption : class Parameters Type Name Description IModuleHostBuilder builder Module host builder. System.Func <T> module Function to get module instance. System.Action <TOption> setupOptions Action for SetupOptions(Action<TOption>) . System.Action <TOption, System.IServiceProvider > configureOptions Action for ConfigureOptions(Action<TOption, IServiceProvider>) . Returns Type Description IModuleHostBuilder Type Parameters Name Description T Module type. TOption Module option type. UsePostMiddleware(IModuleHostBuilder, Action<IModuleHostBuilder, IServiceCollection>) Use a building middleware with Post type. Declaration public static IModuleHostBuilder UsePostMiddleware(this IModuleHostBuilder builder, Action<IModuleHostBuilder, IServiceCollection> middleware) Parameters Type Name Description IModuleHostBuilder builder System.Action < IModuleHostBuilder , Microsoft.Extensions.DependencyInjection.IServiceCollection > middleware Returns Type Description IModuleHostBuilder UsePreMiddleware(IModuleHostBuilder, Action<IModuleHostBuilder, IServiceCollection>) Use a building middleware with Pre type. Declaration public static IModuleHostBuilder UsePreMiddleware(this IModuleHostBuilder builder, Action<IModuleHostBuilder, IServiceCollection> middleware) Parameters Type Name Description IModuleHostBuilder builder System.Action < IModuleHostBuilder , Microsoft.Extensions.DependencyInjection.IServiceCollection > middleware Returns Type Description IModuleHostBuilder"
  },
  "api/modulight/Modulight.Modules.Options.EmptyModuleOption-1.html": {
    "href": "api/modulight/Modulight.Modules.Options.EmptyModuleOption-1.html",
    "title": "Class EmptyModuleOption<T> | Delights",
    "keywords": "Class EmptyModuleOption<T> Provide empty module option implement Inheritance System.Object EmptyModuleOption<T> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Modulight.Modules.Options Assembly : Modulight.Modules.Core.dll Syntax public sealed class EmptyModuleOption<T> Type Parameters Name Description T Module type"
  },
  "api/modulight/Modulight.Modules.Options.html": {
    "href": "api/modulight/Modulight.Modules.Options.html",
    "title": "Namespace Modulight.Modules.Options | Delights",
    "keywords": "Namespace Modulight.Modules.Options Classes EmptyModuleOption<T> Provide empty module option implement"
  },
  "api/modulight/Modulight.Modules.Server.AspNet.AspNetServerModule-2.html": {
    "href": "api/modulight/Modulight.Modules.Server.AspNet.AspNetServerModule-2.html",
    "title": "Class AspNetServerModule<TService, TOption> | Delights",
    "keywords": "Class AspNetServerModule<TService, TOption> Basic implement for IAspNetServerModule Inheritance System.Object Module <TService> Module <TService, TOption> AspNetServerModule<TService, TOption> Implements IModule <TService, TOption> IModule <TService> IAspNetServerModule IModule Inherited Members Module<TService, TOption>.OptionConfigurations Module<TService, TOption>.OptionsSetup Module<TService, TOption>.GetSetupOptions(TOption) Module<TService, TOption>.RegisterOptions(IServiceCollection) Module<TService, TOption>.RegisterService(IServiceCollection) Module<TService, TOption>.SetupOptions(Action<TOption>) Module<TService, TOption>.ConfigureOptions(Action<TOption, IServiceProvider>) Module<TService, TOption>.GetOption(IServiceProvider) Module<TService>.Manifest Module<TService>.Setup(IModuleHostBuilder) Module<TService>.GetService(IServiceProvider) Module<TService>.IModule.GetService(IServiceProvider) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Modulight.Modules.Server.AspNet Assembly : Modulight.Modules.Server.AspNet.dll Syntax public abstract class AspNetServerModule<TService, TOption> : Module<TService, TOption>, IModule<TService, TOption>, IModule<TService>, IAspNetServerModule, IModule where TService : class, IModuleService where TOption : class, new() Type Parameters Name Description TService TOption Constructors AspNetServerModule(Nullable<ModuleManifest>) Declaration protected AspNetServerModule(ModuleManifest? manifest = default(ModuleManifest? )) Parameters Type Name Description System.Nullable < ModuleManifest > manifest Methods MapEndpoint(IEndpointRouteBuilder, IServiceProvider) Map all registered module's endpoints. Used in Microsoft.AspNetCore.Builder.EndpointRoutingApplicationBuilderExtensions.UseEndpoints(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.Action{Microsoft.AspNetCore.Routing.IEndpointRouteBuilder}) . Declaration public virtual void MapEndpoint(IEndpointRouteBuilder builder, IServiceProvider provider) Parameters Type Name Description Microsoft.AspNetCore.Routing.IEndpointRouteBuilder builder System.IServiceProvider provider RegisterAspNetServices(IServiceCollection) Register aspnet related services. Declaration public virtual void RegisterAspNetServices(IServiceCollection services) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services RegisterService(IServiceCollection) Auto-register TService as scoped service. Declaration public override void RegisterService(IServiceCollection services) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services Service collection Overrides Modulight.Modules.Module<TService, TOption>.RegisterService(Microsoft.Extensions.DependencyInjection.IServiceCollection) UseMiddleware(IApplicationBuilder, IServiceProvider) Use all registered module's middlewares. Used for Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.UseMiddleware(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.Type,System.Object[]) Declaration public virtual void UseMiddleware(IApplicationBuilder builder, IServiceProvider provider) Parameters Type Name Description Microsoft.AspNetCore.Builder.IApplicationBuilder builder System.IServiceProvider provider Implements IModule<TService, TOption> IModule<TService> IAspNetServerModule IModule"
  },
  "api/modulight/Modulight.Modules.Server.AspNet.AspNetServerModuleExtensions.html": {
    "href": "api/modulight/Modulight.Modules.Server.AspNet.AspNetServerModuleExtensions.html",
    "title": "Class AspNetServerModuleExtensions | Delights",
    "keywords": "Class AspNetServerModuleExtensions Extension methods for aspnet modules. Inheritance System.Object AspNetServerModuleExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Modulight.Modules.Server.AspNet Assembly : Modulight.Modules.Server.AspNet.dll Syntax public static class AspNetServerModuleExtensions Methods GetAspNetServerModuleHost(IServiceProvider) Get aspnet module host from service provider. Declaration public static IAspNetServerModuleHost GetAspNetServerModuleHost(this IServiceProvider provider) Parameters Type Name Description System.IServiceProvider provider Returns Type Description IAspNetServerModuleHost MapAspNetServerModuleEndpoints(IEndpointRouteBuilder) Map all registered aspnet server module's endpoints. Declaration public static IEndpointRouteBuilder MapAspNetServerModuleEndpoints(this IEndpointRouteBuilder builder) Parameters Type Name Description Microsoft.AspNetCore.Routing.IEndpointRouteBuilder builder Returns Type Description Microsoft.AspNetCore.Routing.IEndpointRouteBuilder UseAspNetServerModuleMiddlewares(IApplicationBuilder) Use all registered aspnet server module's middlewares. Declaration public static IApplicationBuilder UseAspNetServerModuleMiddlewares(this IApplicationBuilder builder) Parameters Type Name Description Microsoft.AspNetCore.Builder.IApplicationBuilder builder Returns Type Description Microsoft.AspNetCore.Builder.IApplicationBuilder UseAspNetServerModules(IModuleHostBuilder) Use building middlewares for aspnet modules. It will register IAspNetServerModuleHost service. Declaration public static IModuleHostBuilder UseAspNetServerModules(this IModuleHostBuilder modules) Parameters Type Name Description IModuleHostBuilder modules Returns Type Description IModuleHostBuilder"
  },
  "api/modulight/Modulight.Modules.Server.AspNet.html": {
    "href": "api/modulight/Modulight.Modules.Server.AspNet.html",
    "title": "Namespace Modulight.Modules.Server.AspNet | Delights",
    "keywords": "Namespace Modulight.Modules.Server.AspNet Classes AspNetServerModule<TService, TOption> Basic implement for IAspNetServerModule AspNetServerModuleExtensions Extension methods for aspnet modules. Interfaces IAspNetServerModule Specifies the contract for aspnet modules. IAspNetServerModuleHost Specifies the contract for aspnet module hosts."
  },
  "api/modulight/Modulight.Modules.Server.AspNet.IAspNetServerModule.html": {
    "href": "api/modulight/Modulight.Modules.Server.AspNet.IAspNetServerModule.html",
    "title": "Interface IAspNetServerModule | Delights",
    "keywords": "Interface IAspNetServerModule Specifies the contract for aspnet modules. Inherited Members IModule.Manifest IModule.RegisterService(IServiceCollection) IModule.GetService(IServiceProvider) IModule.Setup(IModuleHostBuilder) Namespace : Modulight.Modules.Server.AspNet Assembly : Modulight.Modules.Server.AspNet.dll Syntax public interface IAspNetServerModule : IModule Methods MapEndpoint(IEndpointRouteBuilder, IServiceProvider) Map all registered module's endpoints. Used in Microsoft.AspNetCore.Builder.EndpointRoutingApplicationBuilderExtensions.UseEndpoints(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.Action{Microsoft.AspNetCore.Routing.IEndpointRouteBuilder}) . Declaration void MapEndpoint(IEndpointRouteBuilder builder, IServiceProvider provider) Parameters Type Name Description Microsoft.AspNetCore.Routing.IEndpointRouteBuilder builder System.IServiceProvider provider RegisterAspNetServices(IServiceCollection) Register aspnet related services. Declaration void RegisterAspNetServices(IServiceCollection services) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services UseMiddleware(IApplicationBuilder, IServiceProvider) Use all registered module's middlewares. Used for Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.UseMiddleware(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.Type,System.Object[]) Declaration void UseMiddleware(IApplicationBuilder builder, IServiceProvider provider) Parameters Type Name Description Microsoft.AspNetCore.Builder.IApplicationBuilder builder System.IServiceProvider provider"
  },
  "api/modulight/Modulight.Modules.Server.AspNet.IAspNetServerModuleHost.html": {
    "href": "api/modulight/Modulight.Modules.Server.AspNet.IAspNetServerModuleHost.html",
    "title": "Interface IAspNetServerModuleHost | Delights",
    "keywords": "Interface IAspNetServerModuleHost Specifies the contract for aspnet module hosts. Namespace : Modulight.Modules.Server.AspNet Assembly : Modulight.Modules.Server.AspNet.dll Syntax public interface IAspNetServerModuleHost : IModuleHost Properties Modules Get all registered modules. Declaration IReadOnlyList<IAspNetServerModule> Modules { get; } Property Value Type Description System.Collections.Generic.IReadOnlyList < IAspNetServerModule > Methods MapEndpoints(IEndpointRouteBuilder, Action<IAspNetServerModule, IEndpointRouteBuilder>) Map all registered module's endpoints. Used in Microsoft.AspNetCore.Builder.EndpointRoutingApplicationBuilderExtensions.UseEndpoints(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.Action{Microsoft.AspNetCore.Routing.IEndpointRouteBuilder}) . Declaration void MapEndpoints(IEndpointRouteBuilder builder, Action<IAspNetServerModule, IEndpointRouteBuilder> postMapEndpoint = null) Parameters Type Name Description Microsoft.AspNetCore.Routing.IEndpointRouteBuilder builder System.Action < IAspNetServerModule , Microsoft.AspNetCore.Routing.IEndpointRouteBuilder > postMapEndpoint Action to configure mapped GraphQL endpoints. UseMiddlewares(IApplicationBuilder) Use all registered module's middlewares. Used for Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.UseMiddleware(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.Type,System.Object[]) Declaration void UseMiddlewares(IApplicationBuilder builder) Parameters Type Name Description Microsoft.AspNetCore.Builder.IApplicationBuilder builder"
  },
  "api/modulight/Modulight.Modules.Server.GraphQL.GraphQLServerModule-2.html": {
    "href": "api/modulight/Modulight.Modules.Server.GraphQL.GraphQLServerModule-2.html",
    "title": "Class GraphQLServerModule<TService, TOption> | Delights",
    "keywords": "Class GraphQLServerModule<TService, TOption> Basic implement for IGraphQLServerModule Inheritance System.Object Module <TService> Module <TService, TOption> GraphQLServerModule<TService, TOption> Implements IModule <TService, TOption> IModule <TService> IGraphQLServerModule IModule Inherited Members Module<TService, TOption>.OptionConfigurations Module<TService, TOption>.OptionsSetup Module<TService, TOption>.GetSetupOptions(TOption) Module<TService, TOption>.RegisterOptions(IServiceCollection) Module<TService, TOption>.RegisterService(IServiceCollection) Module<TService, TOption>.SetupOptions(Action<TOption>) Module<TService, TOption>.ConfigureOptions(Action<TOption, IServiceProvider>) Module<TService, TOption>.GetOption(IServiceProvider) Module<TService>.Manifest Module<TService>.Setup(IModuleHostBuilder) Module<TService>.GetService(IServiceProvider) Module<TService>.IModule.GetService(IServiceProvider) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Modulight.Modules.Server.GraphQL Assembly : Modulight.Modules.Server.GraphQL.dll Syntax public abstract class GraphQLServerModule<TService, TOption> : Module<TService, TOption>, IModule<TService, TOption>, IModule<TService>, IGraphQLServerModule, IModule where TService : class, IModuleService where TOption : class, IGraphQLServerModuleOption, new() Type Parameters Name Description TService TOption Constructors GraphQLServerModule(Nullable<ModuleManifest>) Declaration protected GraphQLServerModule(ModuleManifest? manifest = default(ModuleManifest? )) Parameters Type Name Description System.Nullable < ModuleManifest > manifest Properties MutationType Mutation type for Microsoft.Extensions.DependencyInjection.SchemaRequestExecutorBuilderExtensions.AddMutationType(HotChocolate.Execution.Configuration.IRequestExecutorBuilder,System.Type) . Declaration public virtual Type MutationType { get; } Property Value Type Description System.Type QueryType Query type for Microsoft.Extensions.DependencyInjection.SchemaRequestExecutorBuilderExtensions.AddQueryType(HotChocolate.Execution.Configuration.IRequestExecutorBuilder,System.Type) . Declaration public abstract Type QueryType { get; } Property Value Type Description System.Type SubscriptionType Subscription type for Microsoft.Extensions.DependencyInjection.SchemaRequestExecutorBuilderExtensions.AddSubscriptionType(HotChocolate.Execution.Configuration.IRequestExecutorBuilder,System.Type) . Declaration public virtual Type SubscriptionType { get; } Property Value Type Description System.Type Methods MapEndpoint(IEndpointRouteBuilder, IServiceProvider) Map graphql endpoints. Used in Microsoft.AspNetCore.Builder.EndpointRoutingApplicationBuilderExtensions.UseEndpoints(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.Action{Microsoft.AspNetCore.Routing.IEndpointRouteBuilder}) . Declaration public virtual GraphQLEndpointConventionBuilder MapEndpoint(IEndpointRouteBuilder builder, IServiceProvider provider) Parameters Type Name Description Microsoft.AspNetCore.Routing.IEndpointRouteBuilder builder System.IServiceProvider provider Returns Type Description HotChocolate.AspNetCore.Extensions.GraphQLEndpointConventionBuilder RegisterGraphQLService(IServiceCollection) It use QueryType , MutationType and SubscriptionType to register graphql schema. And it enable support for Microsoft.Extensions.DependencyInjection.HotChocolateDataRequestBuilderExtensions.AddFiltering(HotChocolate.Execution.Configuration.IRequestExecutorBuilder) , Microsoft.Extensions.DependencyInjection.HotChocolateDataRequestBuilderExtensions.AddSorting(HotChocolate.Execution.Configuration.IRequestExecutorBuilder) and Microsoft.Extensions.DependencyInjection.HotChocolateDataRequestBuilderExtensions.AddProjections(HotChocolate.Execution.Configuration.IRequestExecutorBuilder) . Declaration public virtual IRequestExecutorBuilder RegisterGraphQLService(IServiceCollection services) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services Returns Type Description HotChocolate.Execution.Configuration.IRequestExecutorBuilder RegisterService(IServiceCollection) Auto-register TService as scoped service. Declaration public override void RegisterService(IServiceCollection services) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services Service collection Overrides Modulight.Modules.Module<TService, TOption>.RegisterService(Microsoft.Extensions.DependencyInjection.IServiceCollection) SetupOptions(Action<TOption>) When SchemaName is empty, it will use for default. When Endpoint is empty, it will use /graphql/ SchemaName for default. Declaration public override void SetupOptions(Action<TOption> setupOptions) Parameters Type Name Description System.Action <TOption> setupOptions Overrides Modulight.Modules.Module<TService, TOption>.SetupOptions(System.Action<TOption>) Implements IModule<TService, TOption> IModule<TService> IGraphQLServerModule IModule"
  },
  "api/modulight/Modulight.Modules.Server.GraphQL.GraphQLServerModuleExtensions.html": {
    "href": "api/modulight/Modulight.Modules.Server.GraphQL.GraphQLServerModuleExtensions.html",
    "title": "Class GraphQLServerModuleExtensions | Delights",
    "keywords": "Class GraphQLServerModuleExtensions Extension methods for graphql modules. Inheritance System.Object GraphQLServerModuleExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Modulight.Modules.Server.GraphQL Assembly : Modulight.Modules.Server.GraphQL.dll Syntax public static class GraphQLServerModuleExtensions Methods GetGraphQLServerModuleHost(IServiceProvider) Get graphql module host from service provider. Declaration public static IGraphQLServerModuleHost GetGraphQLServerModuleHost(this IServiceProvider provider) Parameters Type Name Description System.IServiceProvider provider Returns Type Description IGraphQLServerModuleHost MapGraphQLServerModuleEndpoints(IEndpointRouteBuilder, Action<IGraphQLServerModule, GraphQLEndpointConventionBuilder>) Map all registered graphql server module's endpoints. Declaration public static IEndpointRouteBuilder MapGraphQLServerModuleEndpoints(this IEndpointRouteBuilder builder, Action<IGraphQLServerModule, GraphQLEndpointConventionBuilder> postMapEndpoint = null) Parameters Type Name Description Microsoft.AspNetCore.Routing.IEndpointRouteBuilder builder System.Action < IGraphQLServerModule , HotChocolate.AspNetCore.Extensions.GraphQLEndpointConventionBuilder > postMapEndpoint Returns Type Description Microsoft.AspNetCore.Routing.IEndpointRouteBuilder UseGraphQLServerModules(IModuleHostBuilder) Use building middlewares for graphql modules. It will register IGraphQLServerModuleHost service. Declaration public static IModuleHostBuilder UseGraphQLServerModules(this IModuleHostBuilder modules) Parameters Type Name Description IModuleHostBuilder modules Returns Type Description IModuleHostBuilder"
  },
  "api/modulight/Modulight.Modules.Server.GraphQL.GraphQLServerModuleOption.html": {
    "href": "api/modulight/Modulight.Modules.Server.GraphQL.GraphQLServerModuleOption.html",
    "title": "Class GraphQLServerModuleOption | Delights",
    "keywords": "Class GraphQLServerModuleOption Basic implement for IGraphQLServerModuleOption . Inheritance System.Object GraphQLServerModuleOption Implements IGraphQLServerModuleOption Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Modulight.Modules.Server.GraphQL Assembly : Modulight.Modules.Server.GraphQL.dll Syntax public class GraphQLServerModuleOption : IGraphQLServerModuleOption Properties Endpoint Endpoint route Declaration public string Endpoint { get; set; } Property Value Type Description System.String SchemaName SchemaName Declaration public string SchemaName { get; set; } Property Value Type Description System.String Implements IGraphQLServerModuleOption"
  },
  "api/modulight/Modulight.Modules.Server.GraphQL.html": {
    "href": "api/modulight/Modulight.Modules.Server.GraphQL.html",
    "title": "Namespace Modulight.Modules.Server.GraphQL | Delights",
    "keywords": "Namespace Modulight.Modules.Server.GraphQL Classes GraphQLServerModule<TService, TOption> Basic implement for IGraphQLServerModule GraphQLServerModuleExtensions Extension methods for graphql modules. GraphQLServerModuleOption Basic implement for IGraphQLServerModuleOption . Interfaces IGraphQLServerModule Specifies the contract for graphql modules. IGraphQLServerModuleHost Specifies the contract for graphql module hosts. IGraphQLServerModuleOption Specifies the contract for graphql module options."
  },
  "api/modulight/Modulight.Modules.Server.GraphQL.IGraphQLServerModule.html": {
    "href": "api/modulight/Modulight.Modules.Server.GraphQL.IGraphQLServerModule.html",
    "title": "Interface IGraphQLServerModule | Delights",
    "keywords": "Interface IGraphQLServerModule Specifies the contract for graphql modules. Inherited Members IModule.Manifest IModule.RegisterService(IServiceCollection) IModule.GetService(IServiceProvider) IModule.Setup(IModuleHostBuilder) Namespace : Modulight.Modules.Server.GraphQL Assembly : Modulight.Modules.Server.GraphQL.dll Syntax public interface IGraphQLServerModule : IModule Methods MapEndpoint(IEndpointRouteBuilder, IServiceProvider) Map graphql endpoints. Used in Microsoft.AspNetCore.Builder.EndpointRoutingApplicationBuilderExtensions.UseEndpoints(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.Action{Microsoft.AspNetCore.Routing.IEndpointRouteBuilder}) . Declaration GraphQLEndpointConventionBuilder MapEndpoint(IEndpointRouteBuilder builder, IServiceProvider provider) Parameters Type Name Description Microsoft.AspNetCore.Routing.IEndpointRouteBuilder builder System.IServiceProvider provider Returns Type Description HotChocolate.AspNetCore.Extensions.GraphQLEndpointConventionBuilder RegisterGraphQLService(IServiceCollection) Register graphql related services. Declaration IRequestExecutorBuilder RegisterGraphQLService(IServiceCollection services) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services Returns Type Description HotChocolate.Execution.Configuration.IRequestExecutorBuilder"
  },
  "api/modulight/Modulight.Modules.Server.GraphQL.IGraphQLServerModuleHost.html": {
    "href": "api/modulight/Modulight.Modules.Server.GraphQL.IGraphQLServerModuleHost.html",
    "title": "Interface IGraphQLServerModuleHost | Delights",
    "keywords": "Interface IGraphQLServerModuleHost Specifies the contract for graphql module hosts. Namespace : Modulight.Modules.Server.GraphQL Assembly : Modulight.Modules.Server.GraphQL.dll Syntax public interface IGraphQLServerModuleHost : IModuleHost Properties Modules Get all registered modules. Declaration IReadOnlyList<IGraphQLServerModule> Modules { get; } Property Value Type Description System.Collections.Generic.IReadOnlyList < IGraphQLServerModule > Methods MapEndpoints(IEndpointRouteBuilder, Action<IGraphQLServerModule, GraphQLEndpointConventionBuilder>) Map all registered module's endpoints. Used in Microsoft.AspNetCore.Builder.EndpointRoutingApplicationBuilderExtensions.UseEndpoints(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.Action{Microsoft.AspNetCore.Routing.IEndpointRouteBuilder}) . Declaration void MapEndpoints(IEndpointRouteBuilder builder, Action<IGraphQLServerModule, GraphQLEndpointConventionBuilder> postMapEndpoint = null) Parameters Type Name Description Microsoft.AspNetCore.Routing.IEndpointRouteBuilder builder System.Action < IGraphQLServerModule , HotChocolate.AspNetCore.Extensions.GraphQLEndpointConventionBuilder > postMapEndpoint Action to configure mapped GraphQL endpoints."
  },
  "api/modulight/Modulight.Modules.Server.GraphQL.IGraphQLServerModuleOption.html": {
    "href": "api/modulight/Modulight.Modules.Server.GraphQL.IGraphQLServerModuleOption.html",
    "title": "Interface IGraphQLServerModuleOption | Delights",
    "keywords": "Interface IGraphQLServerModuleOption Specifies the contract for graphql module options. Namespace : Modulight.Modules.Server.GraphQL Assembly : Modulight.Modules.Server.GraphQL.dll Syntax public interface IGraphQLServerModuleOption Properties Endpoint Endpoint route Declaration string Endpoint { get; set; } Property Value Type Description System.String SchemaName SchemaName Declaration string SchemaName { get; set; } Property Value Type Description System.String"
  },
  "api/modulight/Modulight.Modules.Services.EmptyModuleService-1.html": {
    "href": "api/modulight/Modulight.Modules.Services.EmptyModuleService-1.html",
    "title": "Class EmptyModuleService<T> | Delights",
    "keywords": "Class EmptyModuleService<T> Provide empty module service implement Inheritance System.Object EmptyModuleService<T> Implements IModuleService Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Modulight.Modules.Services Assembly : Modulight.Modules.Core.dll Syntax public sealed class EmptyModuleService<T> : IModuleService Type Parameters Name Description T Module type Implements IModuleService"
  },
  "api/modulight/Modulight.Modules.Services.html": {
    "href": "api/modulight/Modulight.Modules.Services.html",
    "title": "Namespace Modulight.Modules.Services | Delights",
    "keywords": "Namespace Modulight.Modules.Services Classes EmptyModuleService<T> Provide empty module service implement Interfaces IModuleService Specifies the contract for module services"
  },
  "api/modulight/Modulight.Modules.Services.IModuleService.html": {
    "href": "api/modulight/Modulight.Modules.Services.IModuleService.html",
    "title": "Interface IModuleService | Delights",
    "keywords": "Interface IModuleService Specifies the contract for module services Namespace : Modulight.Modules.Services Assembly : Modulight.Modules.Core.dll Syntax public interface IModuleService"
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Introduction | Delights",
    "keywords": "Introduction"
  },
  "index.html": {
    "href": "index.html",
    "title": "Delights | Delights",
    "keywords": "Delights Delights is my collection of useful tools in life. It's built on a light modular framework Modulight . Visit here for details about the modular framework."
  }
}